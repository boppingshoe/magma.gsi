[{"path":"https://boppingshoe.github.io/magma.gsi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 magma.gsi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"Age priors configurations comparison","text":"Mansplain roles age priors MAGMA model. Compare three different setups age priors: 1) conventional flat priors equal value among age classes, 2) flat priors small value equal among age classes, 3) unequal prior values greater weights concentrating major age classes close--zero values age classes unobserved harvest sample.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Age priors configurations comparison","text":"Bayesian estimation MAGMA parameters (.e., stock proportions, age--stock composition, individual group membership assignments) done type Markov Chain Monte Carlo method called Gibbs sampler. Gibbs sampler algorithm isolates model parameters separate full conditional distributions1, can dealt individually easier work joint distribution parameters. Gibbs sampler algorithm MAGMA, values age proportions updated based Dirichlet distribution parameters equal sum 1) tallies individuals age class population mixture 2) prior value specified age class. algorithm updates age class memberships individuals without observed age based updated age proportions. New summaries tallied age classes new age proportions updated. cycle repeated simulated values converged posterior distribution age proportions. Conventionally, set values age priors equally among age classes. example, nine age classes estimate, value prior age class 19\\frac{1}{9}, populations. counted 10 individuals specific age class population, ratio empirical data prior 90:1. easy see empirical data often overpower prior Gibbs sampler algorithm. However, (small number ) individuals age class, age prior influential empirical data determining age proportion. likelihood-based model shows zero, near-zero, estimate individual observed age class. However, unlike likelihood-based models, current setup age priors MAGMA model prevents age class zero, even observed individual age class. necessarily bad thing force proportion unobserved age class zero (.e., “zero-”). One may believe age class exists population, always end individuals age class sample rare. assigning small value prior age class, ensure least quantity proportion allocated age class events absence. Still, people prefer zero-unobserved age classes MAGMA model estimates comparable likelihood-based framework. Updated MAGMA package option assigning 0’s2 age priors unobserved age classes. setup effectively zero-proportion age class unobserved mixture. another option MAGMA package assigns small value3 age priors equally across age classes. third option minimizes proportions unobserved age classes without forcing zeros. However, don’t know effects new setups estimation MAGMA model parameters. document, use simulation analysis assess possible effects age priors accuracy precision estimation MAGMA model. run simulated data sets using -mentioned three age prior configurations compare results.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"update-for-september-2024-lynn-canal","dir":"Articles","previous_headings":"Background","what":"Update for September 2024 (Lynn Canal)","title":"Age priors configurations comparison","text":"updated analysis Lynn Canal sockeye baseline multi-stratum set . Lynn Canal post-season reporting 251 collections divided seven groups. Majority collections included “” reporting group. age, 15 classes total. Five major age classes (03, 12, 13, 22, 23), rest included “.”","code":""},{"path":[]},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"yukon-chinook","dir":"Articles","previous_headings":"Methods","what":"Yukon Chinook","title":"Age priors configurations comparison","text":"used Yukon Chinook baseline simulation analysis. Chinook baseline modified previous analysis contained portion original collections. modified baseline marker-set 380 loci differentiate Chinook salmon among four reporting groups middle/upper Yukon River (Koyukuk, Tanana, Upper U.S., Canada; Lee et al. 2021). used modified baseline generate 100 sets MAGMA mixtures (single district, single subdistrict, single week) randomly set age--stock compositions, ran mixtures using three configurations age priors. Finally, calculated compared root mean-square-errors (RMSE), deviations, bias 100 analyses. Procedures generating one set MAGMA data follows: Randomly set proportions four reporting groups. Based set proportions, randomly allocate 190 individuals populations within reporting group. Simulate genotypes mixture individuals based baseline allele frequencies corresponding assigned population memberships. simulated values drawn multinomial distributions. randomly set proportions age--stock compositions. age--stock composition 4×94 \\times 9 matrix rows represent reporting groups columns represent age classes. nine age classes ages 1.1, 1.2, 1.3, 2.1, 2.2, 2.3, 3.1, 3.2, 3.3. proportions ages 1.1, 1.2, 3.3 always 0’s analysis, rest randomly set. age proportions within reporting group add 1. Assign age mixture individual based assigned reporting group membership. Randomly withheld age identities 15% mixture individuals. Format data set MAGMA model (.e., magmatize data). one district, one subdistrict, one week mixture data set. ran 100 MAGMA data sets three configurations age priors: 1) “flat”: conventional flat priors equal value among age classes, 2) “weak flat”: flat priors small value equal among age classes, 3) “zero ”: unequal prior values greater weights concentrating major age classes 0’s age classes unobserved harvest sample. ran model 1,000 iterations, 500 burn-ins, thinning, four chains “hybrid” conditional GSI mode. compared posterior means true proportions nine age classes calculated RMSE bias/deviation. RMSE calculated RMSE=1n∑=1n(Yi−Ŷ)2RMSE = \\sqrt{\\frac{1}{n} \\sum_{=1}^{n} (Y_i - \\hat Y_i)^2}, nn number cross-validation analyses, YiY_i true proportion age yy iith analysis, Ŷ\\hat Y_i posterior mean proportion age yy iith analysis. Bias derived taking difference posterior mean true proportion age class cross-validation analysis. “Deviation ≥\\geq 0.1” quantified portion cross-validation analyses absolute biases greater equal 0.1.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"update-for-september-2024-lynn-canal-1","dir":"Articles","previous_headings":"Methods","what":"Update for September 2024 (Lynn Canal)","title":"Age priors configurations comparison","text":"Simulations Lynn Canal followed procedures , addition multiple strata. one district two subdistricts two weeks . Age--stock composition 7×157 \\times 15 matrix whole district. ran two sets simulations. first set 0 portion minor age classes. second set small portion (randomly set) minor age classes. Harvest randomly selected 2023 harvest record represent simulated harvest four strata iteration analysis. Sample size stratum randomly drawn negative binomial distribution mean 190 fish dispersion parameter 8 (Neg-bin(μ\\mu = 190, size = 8)). ran total 50 iterations (save time).","code":""},{"path":[]},{"path":[]},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"precision","dir":"Articles","previous_headings":"Results > Yukon Chinook","what":"Precision","title":"Age priors configurations comparison","text":"plotted comparisons posterior means true values Figure 1. performance three configurations similar major age classes (1.3, 2.1, 2.2, 2.3, 3.1, 3.2). “Zero ” configuration performed better age classes 0 proportion (1.1, 1.2, 3.3) compared others (Figure 1). Figure 1: Comparison posterior means true values 100 cross-validation analyses three age prior configurations: ‘flat,’ ‘weak flat,’ ‘zero .’ Red diagonal line represents 1:1 relationship true proportions posterior means. Dashed red lines mark ± 0.1 deviation 1:1 line.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"rmse","dir":"Articles","previous_headings":"Results > Yukon Chinook","what":"RMSE","title":"Age priors configurations comparison","text":"major age classes, performances three configuration similar. “Zero ” lowest RMSE age classes 0 proportion (Table 1; Figure 2). Table 1: Comparison root mean-square-errors age class among three age prior configurations. Figure 2: Root mean-square-errors age class three age prior configurations.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"bias","dir":"Articles","previous_headings":"Results > Yukon Chinook","what":"Bias","title":"Age priors configurations comparison","text":"Three configurations age priors exhibited similar amount biases major age classes (Figure 3). age classes 0 proportion, “weak flat” showed less biases “flat,” “zero ” least biases among three configurations (Figure 3).  Figure 3: Bias age class three age prior configurations.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"deviation-geq-0-1","dir":"Articles","previous_headings":"Results > Yukon Chinook","what":"Deviation ≥0.1\\geq 0.1","title":"Age priors configurations comparison","text":"“Weak flat” prior configuration seemed perform slightly better others major age classes, mostly due randomness simulations. Overall, three configurations showed similar performances. age classes 0 proportion, “zero ” least deviations (Table 2; Figure 4). Table 2: Comparison deviation ≥0.1\\geq 0.1 age class among three age prior configurations. Figure 4: Deviation ≥0.1\\geq 0.1 age class three age prior configurations.","code":""},{"path":[]},{"path":[]},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"precision-1","dir":"Articles","previous_headings":"Results > Update for September 2024 (Lynn Canal) > True 0 proportions for minor age classes","what":"Precision","title":"Age priors configurations comparison","text":"Performance three configurations similar three configurations (Figure 5). Dots “weak flat” configuration seemed diffused compared others, noticeable (Figure 5). Figure 5: Comparison posterior means true values 50 cross-validation analyses three age prior configurations: ‘flat,’ ‘weak flat,’ ‘zero ’ using Lynn Canal sockeye baseline. True 0 proportions minor age classes. Diagonal line represents 1:1 relationship true proportions posterior means. Dashed lines mark ± 0.1 deviation 1:1 line.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"rmse-1","dir":"Articles","previous_headings":"Results > Update for September 2024 (Lynn Canal) > True 0 proportions for minor age classes","what":"RMSE","title":"Age priors configurations comparison","text":"“” age class “” reporting group highest errors across three configurations. “Weak-flat” priors higher errors overall compared “flat” “zero-” (Table 3; Figure 6). Table 3: Comparison root mean-square-errors age class among three age prior configurations using Lynn Canal sockeye baseline. True 0 proportions minor age classes.  Figure 6: Root mean-square-errors age class three age prior configurations using Lynn Canal sockeye baseline. True 0 proportions minor age classes.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"bias-1","dir":"Articles","previous_headings":"Results > Update for September 2024 (Lynn Canal) > True 0 proportions for minor age classes","what":"Bias","title":"Age priors configurations comparison","text":"Three configurations age priors exhibited similar amount biases major age classes (Figure 7). “” age classes 0 proportions, “flat” priors showed biases. “zero ” priors least biases among three configurations (Figure 7).  Figure 7: Bias age class three age prior configurations using Lynn Canal sockeye baseline. True 0 proportions minor age classes.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"deviation-geq-0-1-1","dir":"Articles","previous_headings":"Results > Update for September 2024 (Lynn Canal) > True 0 proportions for minor age classes","what":"Deviation ≥0.1\\geq 0.1","title":"Age priors configurations comparison","text":"“Weak flat” prior configuration seemed deviation overall compared others. “” age class “” reporting group, “zero ” “flat” priors showed similar amount deviations (Table 4; Figure 8). Table 4: Comparison deviation ≥0.1\\geq 0.1 age class among three age prior configurations using Lynn Canal sockeye baseline. True 0 proportions minor age classes.  Figure 8: Deviation ≥0.1\\geq 0.1 age class three age prior configurations using Lynn Canal sockeye baseline. True 0 proportions minor age classes.","code":""},{"path":[]},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"precision-2","dir":"Articles","previous_headings":"Results > Update for September 2024 (Lynn Canal) > Small proportions for some of the minor age classes","what":"Precision","title":"Age priors configurations comparison","text":"Performance “weak flat” configurations seemed less ideal compared “flat” “zero ”. Dots “weak flat” configuration seemed diffused overall (Figure 9). Figure 9: Comparison posterior means true values 50 cross-validation analyses three age prior configurations: ‘flat,’ ‘weak flat,’ ‘zero ’ using Lynn Canal sockeye baseline. Small proportions minor age classes. Diagonal line represents 1:1 relationship true proportions posterior means. Dashed lines mark ± 0.1 deviation 1:1 line.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"rmse-2","dir":"Articles","previous_headings":"Results > Update for September 2024 (Lynn Canal) > Small proportions for some of the minor age classes","what":"RMSE","title":"Age priors configurations comparison","text":"“Zero ” “flat” priors showed similar amount errors, “weak flat” highest RMSE overall (Table 5; Figure 10). Table 5: Comparison root mean-square-errors age class among three age prior configurations using Lynn Canal sockeye baseline. Small proportions minor age classes.  Figure 10: Root mean-square-errors age class three age prior configurations using Lynn Canal sockeye baseline. Small proportions minor age classes.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"bias-2","dir":"Articles","previous_headings":"Results > Update for September 2024 (Lynn Canal) > Small proportions for some of the minor age classes","what":"Bias","title":"Age priors configurations comparison","text":"Three configurations showed similar amount biases (Figure 11).  Figure 11: Bias age class three age prior configurations using Lynn Canal sockeye baseline. Small proportions minor age classes.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"deviation-geq-0-1-2","dir":"Articles","previous_headings":"Results > Update for September 2024 (Lynn Canal) > Small proportions for some of the minor age classes","what":"Deviation ≥0.1\\geq 0.1","title":"Age priors configurations comparison","text":"“Weak flat” prior configuration seemed deviations compared others (Table 6,; Figure 12). Table 6: Comparison deviation ≥0.1\\geq 0.1 age class among three age prior configurations using Lynn Canal sockeye baseline. Small proportions minor age classes.  Figure 12: Deviation ≥0.1\\geq 0.1 age class three age prior configurations using Lynn Canal sockeye baseline. Small proportions minor age classes.","code":""},{"path":[]},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"yukon-chinook-2","dir":"Articles","previous_headings":"Discussion","what":"Yukon Chinook","title":"Age priors configurations comparison","text":"comparison 100 cross-validation analyses three age prior configurations showed similar precision accuracy major age classes. “Zero ” “weak flat” priors intended purpose reducing bias age classes 0 proportion. worth noting “true values” cross-validation analyses observed proportions simulated data. Proportions simulated data might deviate (randomly set) population values used reference constructing mixture samples. differences simulated values true population values referred sampling errors, ignored mainly confine variables analysis configurations age priors. Still, might worthwhile assess performance MAGMA model presence sampling errors future analyses.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"update-for-september-2024-lynn-canal-3","dir":"Articles","previous_headings":"Discussion","what":"Update for September 2024 (Lynn Canal)","title":"Age priors configurations comparison","text":"set Lynn Canal lumps majority collections “” reporting group makes biggest. Furthermore, “” age class also biggest age class 10 minor age classes. Cross-validation simulations demonstrate biases groups accumulated show results. “zero ” configuration helps minimizing biases minor age classes don’t expect see data. However, low number samples minor age classes observed data, results similar “flat” “zero ” configurations. Simulation using Lynn Canal sockeye baseline multi-stratum set . Multiple strata might also increase biases “” age classes estimates averaged across strata. ’m quite sure influence multi-strata. Talking Kyle (GCL fishery geneticist), seems biases “” groups (age class reporting) big concern consist small portion MSA. Plus, groups used SEAK biologists.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/age_prior_comparison.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Age priors configurations comparison","text":"Lee, E., Dann, T., Hoyt, H. (2021). Yukon River Chinook Genetic Baseline Improvements. Yukon River Panel Restoration Enhancement Fund Final Report, URE-163-19N.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"MAGMA Bayesian genetic stock identification model first developed Gene Conservation Lab (GCL) biometrician Jim Jasper. MAGMA based Pella-Masuda model (Pella & Masuda, 2001) incorporates information age hatchery group membership using matched scales otoliths allow detailed stock composition estimates. Mainly, MAGMA estimates two sets parameters: population age. mixture (stratum), MAGMA estimates vector population proportions wild hatchery groups. mixtures (strata) within year, MAGMA estimates matrix age proportions row represents wild hatchery population. Populations combined represent reporting group fishery stock. age--stock composition, information often required run reconstruction models, simply product age stock parameters. single-stratum example shown , can see age--stock composition presented. matrix made-age proportions follows: made-stock proportions 0.7 0.3 stock B stratum. Multiplying age stock proportions stock: age--stock composition1 stratum : age/stock compositions strata calculated fashion, multiplied harvest proportions corresponding strata summed get weighted average age/stock composition whole fishery. Age proportions estimated combining mixtures/strata within year, can counter-intuitive first glance. , may reasonable assume mixtures share age distribution. However, MAGMA model, age compositions adjusted according stock proportions mixture (.e., stratum). stock proportions different mixtures mixtures, differences stock compositions drive differences age compositions mixtures. previous example, stock consists mainly (50%) age 3 fish 70% total mixture population. Therefore, age 3 fish stock dominant class mixture population. another stratum, stock B might majority mixture populations. case, expect see age 2 dominant class compositions driven mostly stock B. required individuals data set observed genotype age. Base data available, MAGMA model assigns likely membership population /age individual unobserved genotype /age. However, adequate sample genotyped individuals represent stratum data set. inadequate number (small zero sample size) genotyped individuals stratum, MAGMA model estimates population proportions stratum based overall proportions strata combined. Estimation age population compositions MAGMA model done algorithm called Gibbs sampler. process initialized stochastically assigning individuals unobserved identities group membership population age class based specified priors, proportions populations age classes “estimated” drawing values full conditional distributions2 population age classes. full conditional distributions mainly based numbers individuals counted population age group. Gibbs sampler proceeds following steps: Determine population memberships mixture individuals : stochastically assign (wild) population membership individual without observed identity genotypes based genotypic frequencies population proportions, stochastically assign (wild) population membership individual without observed identity without genotypes based population proportions. individual’s age unobserved, assign age based age composition assigned population membership. Draw updated values population age proportions baseline allele frequencies full conditional distributions based updates : tallies individuals age class population (assigned observed) wild hatchery groups specified prior values. algorithm repeated simulations converged posterior distribution parameters, usually takes thousands iterations. adapted modified version conditional genetic stock identification (conditional GSI; Moran & Anderson 2018) model running MAGMA. modification speeds Gibbs sampler algorithm compared conventional “fully Bayesian” approach baseline allele frequencies updated every 10th iteration modified conditional GSI algorithm. Details fully Bayesian conditional GSI models covered Background methods section. Using posterior distribution, summarize point estimates credible intervals age/population compositions model convergence diagnostics output statistics.","code":""},{"path":[]},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"data-format","dir":"Articles","previous_headings":"How to use MAGMA","what":"Data Format","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"running magmatize_data() function, need set data folder working directory. data folder put files compile input data running MAGMA model. files : baseline.RData, group_namesXXX.txt, groupsXXX.txt, harvestXXX.txt, metadata.txt, mixture.RData. group_namesXXX.txt groupsXXX.txt saved fishery extension. example, group_namesFAKE.txt groupsFAKE.txt files “FAKE” fishery. group_namesXXX.txt contains names reporting groups order group identifying numbers (groupvec). groupsXXX.txt contains groupvec population data. following shows format group_namesXXX.txt groupsXXX.txt. harvestXXX.txt also saved fishery extension. Harvest file contains number harvest sampling week district subdistrict. following shows example “FAKE” fishery harvest. Note column names harvest file capital letters. metadata.txt contains information (district subdistrict) (week) fish data set collected. fish identified SILLY_VIAL, unique identifier. metadata.txt also contains information age origin fish, observed. Age recorded European system without “.” fresh salt water ages. Origin fish recorded “WILD” natural origin fish, designated four letter code specific hatchery. following shows format metadata.txt. Note column names capital letters. baseline.RData contains genetic information baseline populations .gcl files. baseline.RData created loading GCL baseline files onto R environment run save.image(file = \"baseline.RData\"). mixture.RData contains .gcl file(s) mixture (samples genetic information) fishery name (character string). mixture.RData also created save.image() R. option include fishery name mixture.data specify magmatized_data() function instead. specified places different fishery names, one mixture.RData take precedence. option allows users summarize MAGMA output different reporting group setups without rerunning model .","code":"readr::read_table(\"data/group_namesFAKE.txt\") #> # A tibble: 4 × 1 #>   D1      #>   <chr>   #> 1 Koyukuk #> 2 Tanana  #> 3 UpperUS #> 4 Canada  readr::read_table(\"data/groupsFAKE.txt\") #> # A tibble: 43 × 2 #>    SOURCE                                 D1 #>    <chr>                               <dbl> #>  1 KHENS01                                 1 #>  2 KHENS07.KHENS15                         1 #>  3 KSFKOY03                                1 #>  4 KMFKOY10.KMFKOY11.KMFKOY12.KMFKOY13     1 #>  5 KKANT05                                 2 #>  6 KCHAT01.KCHAT07                         2 #>  7 KCHENA01                                2 #>  8 KSALC04.KSALC05                         2 #>  9 KGOODP06.KGOODP07.KGOODP11.KGOODP12     2 #> 10 KBEAV97                                 3 #> # ℹ 33 more rows readr::read_table(\"data/harvestFAKE.txt\") #> # A tibble: 2 × 5 #>    YEAR DISTRICT SUBDISTRICT STAT_WEEK HARVEST #>   <dbl>    <dbl>       <dbl>     <dbl>   <dbl> #> 1  2023        1           1         1    1989 #> 2  2023        1           1         2    4414 head(readr::read_table(\"data/metadata.txt\")) #> # A tibble: 6 × 9 #>   SILLY_VIAL  YEAR STAT_WEEK DISTRICT SUBDISTRICT AGE_EUROPEAN SOURCE SILLY_CODE #>   <chr>      <dbl>     <dbl>    <dbl>       <dbl>        <dbl> <chr>  <chr>      #> 1 FAKE_KBEA…  2023         1        1           1           22 WILD   UpperUS    #> 2 FAKE_KBEA…  2023         2        1           1           32 WILD   UpperUS    #> 3 FAKE_KBEA…  2023         1        1           1           32 WILD   UpperUS    #> 4 FAKE_KBEA…  2023         2        1           1           22 WILD   UpperUS    #> 5 FAKE_KBEA…  2023         1        1           1           32 WILD   UpperUS    #> 6 FAKE_KBEA…  2023         1        1           1           NA WILD   UpperUS    #> # ℹ 1 more variable: real_age <dbl>"},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"compile-input-files","dir":"Articles","previous_headings":"How to use MAGMA","what":"Compile Input Files","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"run MAGMA model, input files need compiled first using magmatize_data(). function automatically formats input data list. Users need assign list R object shown code . function gives option save compiled input data. default save_data = TRUE, save data fishery extension magma_dataXXX.Rds data folder specified directory. Age classes analysis identified step. User can specify age classes let MAGMA choose age classes estimate. default, MAGMA identifies ranges freshwater saltwater ages metadata expand age classes using age ranges. example, observed age classes : 12, 13, 21, 22, 23, 31, MAGMA expand age classes 11, 12, 13, 21, 22, 23, 31, 32, 33. analysis five major classes: 11, 12, 21, 22, 31, user can specify “” group include ages 13, 23, 32, 33. similar fashion, user can specify “0X” age catch 0 freshwater ages. MAGMA user can provide list loci check baseline mixture data (optional). warning message returned difference data sets list provided. formatted input files following structure:","code":"yomamafat <-   magmatize_data(wd = getwd(),                  age_classes = c(13, 21, 22, 23, 31, 32, \"other\"),                  fishery = NULL,                  loci_names = NULL,                  save_data = FALSE) #> Compiling input data, may take a minute or two... #> FAKE is the fishery identified in the mixture.RData #> No missing hatcheries #> Time difference of 9.823383 secs str(yomamafat) #> List of 16 #>  $ x           : int [1:149, 1:803] 2 1 2 2 2 1 1 0 1 2 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:149] \"FAKE_KBEAV97_22\" \"FAKE_KBEAV97_31\" \"FAKE_KBEAV97_46\" \"FAKE_KBEAV97_60\" ... #>   .. ..$ : chr [1:803] \"GTH2B-550_1\" \"GTH2B-550_2\" \"NOD1_1\" \"NOD1_2\" ... #>  $ y           : int [1:43, 1:803] 144 205 62 54 140 72 236 204 156 137 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:43] \"KHENS01\" \"KHENS07.KHENS15\" \"KSFKOY03\" \"KMFKOY10.KMFKOY11.KMFKOY12.KMFKOY13\" ... #>   .. ..$ : chr [1:803] \"GTH2B-550_1\" \"GTH2B-550_2\" \"NOD1_1\" \"NOD1_2\" ... #>  $ metadat     :'data.frame':    149 obs. of  5 variables: #>   ..$ district: int [1:149] 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ subdist : int [1:149] 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ week    : int [1:149] 1 2 1 2 1 1 1 1 1 1 ... #>   ..$ iden    : int [1:149] NA NA NA NA NA NA NA NA NA NA ... #>   ..$ age     : int [1:149] 5 8 8 5 8 NA NA 8 NA NA ... #>  $ harvest     :'data.frame':    2 obs. of  5 variables: #>   ..$ YEAR       : int [1:2] 2023 2023 #>   ..$ DISTRICT   : int [1:2] 1 1 #>   ..$ SUBDISTRICT: int [1:2] 1 1 #>   ..$ STAT_WEEK  : int [1:2] 1 2 #>   ..$ HARVEST    : num [1:2] 1989 4414 #>  $ nstates     : Named num [1:381] 2 2 2 2 2 2 2 2 2 2 ... #>   ..- attr(*, \"names\")= chr [1:381] \"GTH2B-550\" \"NOD1\" \"Ots_100884-287\" \"Ots_101554-407\" ... #>  $ nalleles    : Named num [1:380] 2 2 2 2 2 2 2 2 2 2 ... #>   ..- attr(*, \"names\")= chr [1:380] \"GTH2B-550\" \"NOD1\" \"Ots_100884-287\" \"Ots_101554-407\" ... #>  $ C           : int 9 #>  $ groups      :'data.frame':    43 obs. of  1 variable: #>   ..$ D1: int [1:43] 1 1 1 1 2 2 2 2 2 3 ... #>  $ group_names :'data.frame':    4 obs. of  1 variable: #>   ..$ D1: chr [1:4] \"Koyukuk\" \"Tanana\" \"UpperUS\" \"Canada\" #>  $ age_class   : Named int [1:9] 7 7 1 2 3 4 5 6 7 #>   ..- attr(*, \"names\")= chr [1:9] \"11\" \"12\" \"13\" \"21\" ... #>  $ age_classes : chr [1:7] \"13\" \"21\" \"22\" \"23\" ... #>  $ wildpops    : chr [1:43] \"KHENS01\" \"KHENS07.KHENS15\" \"KSFKOY03\" \"KMFKOY10.KMFKOY11.KMFKOY12.KMFKOY13\" ... #>  $ hatcheries  : chr(0)  #>  $ districts   : Named chr \"1\" #>   ..- attr(*, \"names\")= chr \"1\" #>  $ subdistricts:List of 1 #>   ..$ 1: Named int 1 #>   .. ..- attr(*, \"names\")= chr \"1\" #>  $ stat_weeks  : int [1:2] 1 2"},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"running-magma","dir":"Articles","previous_headings":"How to use MAGMA","what":"Running MAGMA","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"Use magmatize_mdl() function run model. ’ll need assign output object shown code . Burn-ins excluded summary calculations even user choose keep burn-output. nadapt, keep_burn, flat_age_prior, cond_gsi, file seed use default values specified user. cond_gsi sets option run MAGMA model conditional GSI fully Bayesian algorithm. nadapt allows “warm-” run conditional GSI mode running model fully Bayesian mode. User can tinker age_prior MAGMA model. age_prior = \"flat\" sets equal weights across age groups. age_prior = \"weak_flat\" also sets equal weights across age groups smaller value. Specifying age_prior = \"zero_out\" concentrates prior weights major age groups force undetected age groups (near) zero. seed allows setting random seed pseudo-random number generator, output can reproduced exactly. Just pick number make note future reference. iden_output specifies whether trace history individual group membership assignments included raw model output. Default FALSE (don’t include). raw output MAGMA multi-layered list MCMC chains. chain contains tibble age classes (×\\times iterations ×\\times # districts ×\\times # subdistricts ×\\times # weeks) rows populations columns. call output “raw” format summarized. output also contains specifications running model (iterations, burn-ins… good stuff) optional trace history individual group membership assignments. file specify file path save output individual MCMC chain Fst format end model run. example, ran MAGMA five MCMC chains, five Fst files saved designated location.","code":"freak_out <-   magmatize_mdl(dat_in = yomamafat,                 nreps = 50, nburn = 25, thin = 1, nchains = 2, nadapt = 0,                 keep_burn = TRUE, age_prior = \"zero_out\",                 cond_gsi = TRUE, file = NULL, seed = NULL, iden_output = TRUE) #> Running model... and if oppotunity doesn't knock, build Lofting! #> Time difference of 2.572572 secs #> 2024-10-09 19:37:37.900791"},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"summarizing-output","dir":"Articles","previous_headings":"How to use MAGMA","what":"Summarizing Output","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"MAGMA output summarized using magmatize_summ() function. function needs raw MAGMA output input data objects. raw output can read R object Fst files (saved model run). read model output Fst files, use argument fst_file specify location saved files. big fisheries like TBR SEAK, output can large work laptops process. summary process can ran one district time (using argument which_dist) manage memory use. MAGMA estimates age/stock composition lowest stratum level (.e., statistical weeks), sums lower strata (weighted harvest numbers) provide summaries district subdistrict level setting summ_level = \"district\" \"subdistrict\", respectively. Summaries provided forms stock proportions age--stock compositions. stock proportions district level, estimates statistical week summed across subdistricts within district. also summary summed estimates subdistrict within district. age--stock composition district level, estimates age class proportions summarized reporting group within district. stock proportions subdistrict level, estimates statistical week summarized subdistrict district. also summary summed estimated proportions statistical weeks within subdistrict district. age--stock composition subdistrict level, estimates age class proportions summarized reporting group within subdistrict. summarized MAGMA output organized list items. items _summ summary table posterior means, median, CrI’s convergence diagnostics (Gelman-Rubin effective size). district level, age_summ item provides summaries age--stock composition within district. pop_summ_all pop_summ provide summaries reporting group proportions district summing across statistical weeks within district, respectively. subdistrict level, age_summ item provides summaries age--stock composition within subdistrict. pop_summ_all pop_summ provide summaries reporting group proportions subdistrict statistical week within subdistrict, respectively. example summary table: NeffN_{eff} (n_eff summary table) represents estimate independent sample size posterior sample. large NeffN_{eff} considered better small NeffN_{eff}. says need least blah blah number properly estimate credible intervals, “official” number go . experience tells look NeffN_{eff} together diagnostics. Sometimes may see GR (Gelman-Rubin statistic, R̂\\hat R) passes test NeffN_{eff} small. may want investigate trace plot particular output. Also, simulation iterations small, results NeffN_{eff} can get wacky. items “_prop” posterior samples/simulations (.e., trace history) age population proportions data frame. data frame contains output MCMC chains stacked together. example, run two chains 50 iterations, burn-ins 25, thinning. chose keep burn-ins, results 50 rows output chain. Stacking two chains end 100 rows posterior samples. Trace histories can included part summary output (default), saved Fst files specified location. one decided save trace histories Fst, included summary. save trace histories, use arghument save_trace specify location. folder saved files automatically created. file labelled based type, statistical district/subdistrict/week, /reporting group. example, ap_d2Alaska.fst trace history age proportions district 2 Alaska reporting group. p_d1s2w5.fst trace history group proportions district 1, subdistrict 2, week 5.","code":"magma_summ <-   magmatize_summ(which_dist = 1,                  ma_out = freak_out,                  ma_dat = yomamafat,                  summ_level = \"district\") #> Preparing output (patience grasshopper...) #> Time difference of 0.5508969 secs #> 2024-10-09 19:37:38.546584 magma_summ$age_summ #> $D1_Koyukuk #> # A tibble: 7 × 10 #>   group  age       mean    median       sd     ci.05     ci.95    p0    GR n_eff #>   <chr>  <fct>    <dbl>     <dbl>    <dbl>     <dbl>     <dbl> <dbl> <dbl> <dbl> #> 1 Koyuk… 13    2.81e- 2 1.06e-  2 4.13e- 2 9.84e-  5 1.07e-  1  0.08 0.987  50   #> 2 Koyuk… 21    2.53e- 2 1.32e-  2 3.51e- 2 1.41e-  4 1.04e-  1  0.06 1.21   50   #> 3 Koyuk… 22    6.53e- 2 5.40e-  2 4.25e- 2 1.38e-  2 1.39e-  1  0    0.992  29.0 #> 4 Koyuk… 23    5.20e- 1 5.19e-  1 1.33e- 1 3.18e-  1 7.23e-  1  0    1.00   72.2 #> 5 Koyuk… 31    3.40e- 1 3.37e-  1 1.25e- 1 1.42e-  1 5.25e-  1  0    0.980 159.  #> 6 Koyuk… 32    2.16e- 2 1.66e-  2 2.06e- 2 7.24e-  4 6.11e-  2  0.06 0.993  50   #> 7 Koyuk… other 1.58e-65 6.68e-308 1.12e-64 6.68e-308 1.12e-130  1    0.981   0   #>  #> $D1_Tanana #> # A tibble: 7 × 10 #>   group  age        mean    median        sd     ci.05     ci.95    p0    GR #>   <chr>  <fct>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl> <dbl> <dbl> #> 1 Tanana 13    3.63e-  2 2.92e-  2 2.66e-  2 1.04e-  2 8.64e-  2  0    0.999 #> 2 Tanana 21    1.70e-  1 1.72e-  1 5.40e-  2 9.10e-  2 2.52e-  1  0    0.985 #> 3 Tanana 22    3.77e-  1 3.82e-  1 8.42e-  2 2.20e-  1 4.95e-  1  0    1.07  #> 4 Tanana 23    3.91e-  1 3.77e-  1 9.25e-  2 2.61e-  1 5.42e-  1  0    1.04  #> 5 Tanana 31    1.15e-  2 6.82e-  3 1.28e-  2 2.63e-  4 3.61e-  2  0.02 1.14  #> 6 Tanana 32    1.38e-  2 8.95e-  3 1.67e-  2 6.12e-  4 5.05e-  2  0.02 1.01  #> 7 Tanana other 2.62e-101 6.68e-308 1.85e-100 6.68e-308 9.47e-184  1    0.982 #> # ℹ 1 more variable: n_eff <dbl> #>  #> $D1_UpperUS #> # A tibble: 7 × 10 #>   group   age       mean    median      sd     ci.05     ci.95    p0    GR n_eff #>   <chr>   <fct>    <dbl>     <dbl>   <dbl>     <dbl>     <dbl> <dbl> <dbl> <dbl> #> 1 UpperUS 13    0.0261   1.60e-  2 0.0394  8.40e-  4 7.76e-  2  0.04 0.998  50   #> 2 UpperUS 21    0.0288   2.09e-  2 0.0291  8.62e-  4 8.30e-  2  0    0.984  50   #> 3 UpperUS 22    0.324    3.15e-  1 0.0972  1.90e-  1 4.96e-  1  0    1.03   83.5 #> 4 UpperUS 23    0.178    1.81e-  1 0.0678  7.17e-  2 2.71e-  1  0    1.01   50.5 #> 5 UpperUS 31    0.0277   1.69e-  2 0.0345  1.44e-  3 8.86e-  2  0    1.12   50   #> 6 UpperUS 32    0.415    4.11e-  1 0.0990  2.71e-  1 5.75e-  1  0    1.13   41.5 #> 7 UpperUS other 0.000202 6.68e-308 0.00142 6.68e-308 4.23e-134  0.98 1.22   25   #>  #> $D1_Canada #> # A tibble: 7 × 10 #>   group  age         mean    median      sd     ci.05    ci.95    p0    GR n_eff #>   <chr>  <fct>      <dbl>     <dbl>   <dbl>     <dbl>    <dbl> <dbl> <dbl> <dbl> #> 1 Canada 13       5.50e-2 4.85e-  2 2.72e-2 1.89e-  2 9.97e- 2     0 1.24     50 #> 2 Canada 21       1.17e-1 1.16e-  1 4.02e-2 6.10e-  2 1.86e- 1     0 1.02     50 #> 3 Canada 22       3.69e-1 3.73e-  1 5.45e-2 2.81e-  1 4.49e- 1     0 0.984    50 #> 4 Canada 23       3.61e-1 3.58e-  1 4.94e-2 3.02e-  1 4.42e- 1     0 1.18     50 #> 5 Canada 31       4.71e-2 4.30e-  2 2.02e-2 1.91e-  2 7.73e- 2     0 1.00     50 #> 6 Canada 32       5.03e-2 4.46e-  2 2.62e-2 1.91e-  2 1.05e- 1     0 1.01     50 #> 7 Canada other    7.05e-7 6.68e-308 4.98e-6 6.68e-308 1.81e-44     1 0.982    25 magma_summ$age_prop #> $D1_Koyukuk #> # A tibble: 100 × 9 #>      itr chain     other     `13`    `21`    `22`  `23`  `31`      `32` #>    <dbl> <chr>     <dbl>    <dbl>   <dbl>   <dbl> <dbl> <dbl>     <dbl> #>  1     1 ch1   6.68e-308 0.000118 0.0887  0.0750  0.424 0.382 0.0301    #>  2     2 ch1   6.68e-308 0.0354   0.128   0.0426  0.505 0.289 0.000389  #>  3     3 ch1   6.68e-308 0.0455   0.0482  0.105   0.624 0.141 0.0355    #>  4     4 ch1   6.68e-308 0.0161   0.00362 0.00991 0.778 0.160 0.0322    #>  5     5 ch1   6.68e-308 0.00844  0.0292  0.0234  0.490 0.449 0.000123  #>  6     6 ch1   6.68e-308 0.00120  0.0261  0.0512  0.762 0.152 0.00674   #>  7     7 ch1   6.68e-308 0.00861  0.00136 0.0424  0.521 0.426 0.0000256 #>  8     8 ch1   6.68e-308 0.00198  0.0358  0.135   0.624 0.203 0.0000974 #>  9     9 ch1   9.41e-179 0.190    0.00594 0.0595  0.487 0.253 0.00494   #> 10    10 ch1   6.68e-308 0.00261  0.00844 0.103   0.458 0.429 0.000293  #> # ℹ 90 more rows #>  #> $D1_Tanana #> # A tibble: 100 × 9 #>      itr chain     other   `13`   `21`  `22`  `23`   `31`    `32` #>    <dbl> <chr>     <dbl>  <dbl>  <dbl> <dbl> <dbl>  <dbl>   <dbl> #>  1     1 ch1   6.68e-308 0.0567 0.165  0.291 0.363 0.0482 0.0752  #>  2     2 ch1   6.68e-308 0.0209 0.145  0.271 0.473 0.0751 0.0151  #>  3     3 ch1   6.68e-308 0.0130 0.202  0.366 0.317 0.0584 0.0442  #>  4     4 ch1   6.68e-308 0.0452 0.261  0.288 0.348 0.0307 0.0271  #>  5     5 ch1   6.68e-308 0.0585 0.229  0.304 0.390 0.0157 0.00287 #>  6     6 ch1   6.68e-308 0.0608 0.194  0.277 0.369 0.0964 0.00253 #>  7     7 ch1   6.68e-308 0.100  0.186  0.227 0.410 0.0367 0.0396  #>  8     8 ch1   6.68e-308 0.0108 0.252  0.281 0.350 0.0918 0.0141  #>  9     9 ch1   6.68e-308 0.0159 0.200  0.309 0.311 0.163  0.00188 #> 10    10 ch1   6.68e-308 0.0188 0.0904 0.270 0.587 0.0195 0.0143  #> # ℹ 90 more rows #>  #> $D1_UpperUS #> # A tibble: 100 × 9 #>      itr chain     other     `13`    `21`  `22`  `23`    `31`  `32` #>    <dbl> <chr>     <dbl>    <dbl>   <dbl> <dbl> <dbl>   <dbl> <dbl> #>  1     1 ch1   6.68e-308 0.0119   0.0804  0.146 0.216 0.0139  0.531 #>  2     2 ch1   6.68e-308 0.000790 0.0285  0.345 0.185 0.0409  0.400 #>  3     3 ch1   6.68e-308 0.0770   0.00702 0.333 0.125 0.00733 0.451 #>  4     4 ch1   6.68e-308 0.0392   0.0676  0.164 0.184 0.0803  0.464 #>  5     5 ch1   6.68e-308 0.0233   0.0458  0.198 0.261 0.0266  0.445 #>  6     6 ch1   6.68e-308 0.0140   0.0339  0.225 0.113 0.0403  0.573 #>  7     7 ch1   6.68e-308 0.0158   0.0466  0.342 0.129 0.0354  0.430 #>  8     8 ch1   6.68e-308 0.0161   0.0473  0.514 0.117 0.00139 0.305 #>  9     9 ch1   6.68e-308 0.0130   0.00378 0.412 0.177 0.0122  0.382 #> 10    10 ch1   6.68e-308 0.00234  0.0165  0.266 0.220 0.0151  0.481 #> # ℹ 90 more rows #>  #> $D1_Canada #> # A tibble: 100 × 9 #>      itr chain     other   `13`   `21`  `22`  `23`   `31`   `32` #>    <dbl> <chr>     <dbl>  <dbl>  <dbl> <dbl> <dbl>  <dbl>  <dbl> #>  1     1 ch1   6.68e-308 0.119  0.109  0.342 0.255 0.0303 0.144  #>  2     2 ch1   6.68e-308 0.0455 0.0893 0.481 0.304 0.0279 0.0521 #>  3     3 ch1   6.68e-308 0.107  0.0943 0.345 0.366 0.0364 0.0519 #>  4     4 ch1   9.77e- 66 0.0733 0.0692 0.186 0.614 0.0284 0.0301 #>  5     5 ch1   6.68e-308 0.0630 0.0716 0.354 0.433 0.0321 0.0463 #>  6     6 ch1   6.68e-308 0.0852 0.146  0.274 0.395 0.0498 0.0506 #>  7     7 ch1   6.68e-308 0.0279 0.138  0.382 0.358 0.0245 0.0689 #>  8     8 ch1   6.68e-308 0.0453 0.0763 0.436 0.354 0.0224 0.0666 #>  9     9 ch1   1.91e-202 0.0581 0.0962 0.468 0.317 0.0378 0.0232 #> 10    10 ch1   3.73e-152 0.0293 0.209  0.302 0.418 0.0220 0.0200 #> # ℹ 90 more rows"},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"trace-plot","dir":"Articles","previous_headings":"How to use MAGMA > Summarizing Output","what":"Trace Plot","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"posterior samples trace can used make trace plots code function magmatize_tr_plot(). using magmatize_tr_plot(), need specify amount burn-ins thinning ran model. forget, can find raw magma output (e.g., magma_out$specs). magmatize_tr_plot() outputs one data frame (e.g. sampling period) time. burn-portion output shaded red. Trace plots age composition. Note one can read saved trace histories make trace plots. example, trace history age proportions Koyukuk reporting group can plotted using magmatize_tr_plot(fst::read_fst(paste0(wd, \"/trace_district/ap_d1Koyukuk.fst\")), nburn = 25).","code":"magmatize_tr_plot(magma_summ$age_prop$D1_Koyukuk, nburn = 25)"},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"individual-group-membership-assignment","dir":"Articles","previous_headings":"How to use MAGMA > Summarizing Output","what":"Individual (group membership) assignment","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"magmatize_indiv() summarizes posterior means group membership individual metadata. probability output can organized populations combined reporting groups (single districts ). probabilities group memberships individual based genotype available. Otherwise, posteriors based priors known identities, provide additional useful information group memberships. first column group membership probability summary provides unique id individual data set, allows users filter individuals name.","code":"magma_indiv <- magmatize_indiv(ma_out = freak_out, ma_dat = yomamafat, out_repunit = TRUE) #> Combining populations using reporting groups of district 1.  magma_indiv #> # A tibble: 149 × 5 #>    indiv           Koyukuk Tanana UpperUS Canada #>  * <chr>             <dbl>  <dbl>   <dbl>  <dbl> #>  1 FAKE_KBEAV97_22    0      0       1      0    #>  2 FAKE_KBEAV97_31    0      0       1      0    #>  3 FAKE_KBEAV97_46    0      0       1      0    #>  4 FAKE_KBEAV97_60    0      0       1      0    #>  5 FAKE_KBEAV97_64    0      0       1      0    #>  6 FAKE_KBEAV97_73    0      0       1      0    #>  7 FAKE_KBEAV97_81    0      0       1      0    #>  8 FAKE_KCHAN02_2     0.01   0.05    0.94   0    #>  9 FAKE_KCHAN04_1     0      0       0.91   0.09 #> 10 FAKE_KCHAN04_16    0      0       1      0    #> # ℹ 139 more rows"},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"background-and-methods","dir":"Articles","previous_headings":"","what":"Background and Methods","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"first introduce Pella-Masuda model section backbone MAGMA. Later section, discuss MAGMA developed extending Pella-Masuda model.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"pella-masuda-model","dir":"Articles","previous_headings":"Background and Methods","what":"Pella-Masuda Model","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"population comprised multiple distinct groups, genetic stock identification (GSI) used estimate group membership individual based genetic make-(.e., allele frequencies). GSI model also estimates overall group proportions based number individuals assigned group. fishery context, genetic data individuals called mixture consists multi-locus allele frequencies individual fish collected mixed-stock fishery. 𝐱\\mathbf x denotes mixture. document, bold-font letter represents number set, collection distinct elements. example, 𝐱\\mathbf x set contains individual xx elements. xm,l,jx_{m,l,j} count allele jj locus ll individual fish mm, m∈{1,2,...,M}m \\\\{1,2,...,M\\}, l∈{1,2,...,L}l \\\\{1,2,...,L\\}, j∈{1,2,...,Jl}j \\\\{1,2,...,J_l\\} depends locus ll. Genetic data populations called baseline consists allele frequencies various reference populations collected spawning locations. Researchers select sampling locations best represent demographic production genetic diversity populations area. 𝐲\\mathbf y denotes baseline sample. yk,l,jy_{k,l,j} count allele jj locus ll sample size nk,ln_{k,l} collected baseline population kk, k∈{1,2,...,K}k \\\\{1,2,...,K\\}. mixture baseline, assumed allele counts locus follow multinomial distribution3. Using made-example, baseline, two alleles locus 1 population 2. Counts two alleles y1,2,1,y1,2,2y_{1,2,1},  y_{1,2,2}, follow multinomial distribution parameters q1,2,1,q1,2,2q_{1,2,1}, q_{1,2,2} size n2,1n_{2,1}. Note q1,2,1,q1,2,2q_{1,2,1}, q_{1,2,2} relative frequencies two alleles locus 1 population 2. Bayesian framework, need specify prior distributions parameters; therefore, place Dirichlet4 prior distribution q1,2,1,q1,2,2q_{1,2,1}, q_{1,2,2} hyperparameters5 β1,1,β1,2\\beta_{1,1}, \\beta_{1,2}, β1,1=β1,2=1/2\\beta_{1,1} = \\beta_{1,2} = 1/2 based number alleles locus 1. 𝐪\\mathbf q represents q1,2,1q_{1,2,1} q1,2,2q_{1,2,2}, together allele frequencies loci populations. can see, 𝐪\\mathbf q 𝐲\\mathbf y dimension relative frequency corresponds allele count. model, allele frequencies baseline populations, 𝐪\\mathbf q, determine population proportions. population proportions used determine identities individual fish. Individual identities tallied summarized update baseline allele frequencies. 𝐲\\mathbf y can expressed follows: 𝐲k∼Mult(𝐧k,𝐪k)\\mathbf y_k \\sim Mult(\\mathbf n_k, \\mathbf q_k) Prior distribution 𝐪\\mathbf q: 𝐪k∼Dirich(𝛃)\\mathbf q_k \\sim Dirich(\\mathbf \\beta), 𝛃=1/Jl\\mathbf \\beta = 1/J_l commonly used prior 𝐪\\mathbf q. mentioned, mixture, allele counts locus individual fish follows multinomial distributions. Distribution allele counts related allele frequencies baseline population individual came . However, identity individual fish unknown needs estimated. let 𝐳m\\mathbf z_m represent population identify mmth mixture individual. 𝐳m\\mathbf z_m composed 0’s 1 length KK (e.g. number baseline populations). zm,k=1z_{m,k} = 1 individual mm belongs population kk, zm,k=0z_{m,k} = 0 otherwise. made-example, 𝐳100={0,0,1,0,0}\\mathbf z_{100} = \\{0, 0, 1, 0, 0\\} means five populations, individual fish #100 comes population 3. place multinomial distribution zm,1,zm,2,...,zm,Kz_{m,1}, z_{m,2}, ..., z_{m,K} size 1 probabilities equal population proportions p1,p2,...,pKp_1, p_2, ..., p_K. specify Dirichlet prior distribution p1,p2,...,pKp_1, p_2, ..., p_K hyperparameters α1,α2,...,αK\\alpha_1, \\alpha_2, ..., \\alpha_K, α1=α2=...=αK=1/K\\alpha_1 = \\alpha_2 = ... = \\alpha_K = 1/K. express 𝐳\\mathbf z follows: 𝐳m∼Mult(𝟏,𝐩)\\mathbf z_m \\sim Mult(\\mathbf 1, \\mathbf p) commonly used prior 𝐩\\mathbf p: 𝐩∼Dirich(𝛂)\\mathbf p \\sim Dirich(\\mathbf \\alpha), 𝛂=1/K\\mathbf \\alpha = 1/K. mentioned, mixture sample, allele counts locus individual fish follows multinomial distributions. parameters allele frequencies corresponding baseline population size numbers ploidy respective locus. Remember population identity zm,k=1z_{m,k} = 1 individual mm belongs population kk, zm,k=0z_{m,k} = 0 otherwise. multiplying population identities, zm,1,zm,2,...,zm,Kz_{m,1}, z_{m,2}, ..., z_{m,K}, allele frequencies baseline populations, 𝐪1,𝐪2,...,𝐪K\\mathbf q_1, \\mathbf q_2, ..., \\mathbf q_K, allele frequencies baseline population individual mm belong remain rest goes zero. 𝐱\\mathbf x expressed . 𝐱m∼Mult(𝐩𝐥𝐨𝐢𝐝𝐲,𝐳m∘𝐪)\\mathbf x_m \\sim Mult(\\mathbf{ploidy}, \\mathbf z_m \\circ \\mathbf q), 𝐩𝐥𝐨𝐢𝐝𝐲=ploidy1,ploidy2,...,ploidyL\\mathbf{ploidy} = ploidy_1, ploidy_2, ..., ploidy_L denotes ploidy locus. use ∘\\circ denote element-wise product. Moran Anderson (2018) implement genetic mixture analysis R package, rubias. program widely used researchers around world, including GCL. rubias utilizes model structure called conditional GSI model, modified Pella-Masuda model. main difference two models , conditional model, 𝐪\\mathbf q integrated distribution mixture sample, 𝐱m\\mathbf x_m. , baseline allele frequencies updated model. result , 𝐱m\\mathbf x_m takes form compound Dirichlet-multinomial distribution (Johnson el., 1997): 𝐱m∼CDM(𝐩𝐥𝐨𝐢𝐝𝐲,𝐳m∘𝐯)\\mathbf x_m \\sim CDM(\\mathbf{ploidy}, \\mathbf z_m \\circ \\mathbf v), 𝐯\\mathbf v 𝛃+𝐲\\mathbf \\beta + \\mathbf y. going attempt proving theory behind conditional GSI model document (details can found Moran Anderson, 2018). since 𝐪\\mathbf q integrated 𝐱m\\mathbf x_m, process estimating parameters simpler streamlined. implemented modified version conditional GSI updated edition MAGMA.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"mark-and-age-inclusion","dir":"Articles","previous_headings":"Background and Methods","what":"Mark and Age Inclusion","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"MAGMA basically Pella-Masuda model extension include otolith marks aged individual fish. Pella-Masuda model, fish belongs wild population kk, k∈{1,2,...,K}k \\\\{1,2,...,K\\}. identity estimated based genotype. extended scenario, hatchery populations added mixture can identified otolith markings. identities hatchery fish can traced back completely origin kk, k∈{K+1,K+2,...,K+H}k \\\\{K+1, K+2, ..., K+H\\}. addition otolith marking, entire mixture sample size MM now comprised three components: 1) number wild fish genotyped M(1)M^{(1)}; 2) number wild fish genotyped M(2)M^{(2)}; 3) number otolith-marked fish M(3)M^{(3)}. Note M=M(1)+M(2)+M(3)M = M^{(1)} + M^{(2)} + M^{(3)}. Population identities also partitioned three components. 𝐳\\mathbf z now 𝐳(1)\\mathbf z^{(1)}, 𝐳(2)\\mathbf z^{(2)}, 𝐳(3)\\mathbf z^{(3)}, corresponding respective sample-component. Compartmentalized 𝐳m()\\mathbf z^{()}_m, ∈{1,2,3}\\\\{1,2,3\\}, still follow multinomial distribution size 1 parameter 𝐩\\mathbf p described previously. However, addition hatchery populations, 𝐳m()\\mathbf z^{()}_m parameters 𝐩\\mathbf p now length K+HK+H. p1,p2,...,pK+Hp_1, p_2, ..., p_{K+H} Dirichlet distribution hyperparameters α1,α2,...,αK+H=1/(K+H)\\alpha_1, \\alpha_2, ..., \\alpha_{K+H} = 1/(K+H). express 𝐳()\\mathbf z^{()} prior 𝐩\\mathbf p follows: 𝐳m()∼Mult(𝟏,𝐩)\\mathbf z^{()}_m \\sim Mult(\\mathbf 1, \\mathbf p) 𝐩∼Dirich(𝛂)\\mathbf p \\sim Dirich(\\mathbf \\alpha), 𝛂=1/(K+H)\\mathbf \\alpha = 1/(K+H) Allele counts available individual fish genotyped; hence, genetic information now compartmentalized component 1 mixture sample: 𝐱m(1)∼Mult(𝐩𝐥𝐨𝐢𝐝𝐲,𝐳m(1)⋅𝐪)\\mathbf x^{(1)}_m \\sim Mult(\\mathbf{ploidy}, \\mathbf z^{(1)}_m \\cdot \\mathbf q) similar conditional GSI model: 𝐱m(1)∼CDM(𝐩𝐥𝐨𝐢𝐝𝐲,𝐳m(1)⋅𝐯)\\mathbf x^{(1)}_m \\sim CDM(\\mathbf{ploidy}, \\mathbf z^{(1)}_m \\cdot \\mathbf v) genetic baseline samples required hatchery populations genetic baseline yy unchanged Pella-Masuda model; however, age-class baseline available population. described earlier, fish mixture sample aged . However, document pretend fish aged notation less headache-inducing. fundamental concept still fish aged, complicated notations. Age class identified cc, c∈{1,2,...,C}c \\\\{1,2,...,C\\}. 𝐚\\mathbf denotes age identities mixture fish. Let 𝐚m\\mathbf a_m represent age identify mmth mixture individual. 𝐚m\\mathbf a_m also partitioned three subsets, 𝐚(1)\\mathbf ^{(1)}, 𝐚(2)\\mathbf ^{(2)}, 𝐚(3)\\mathbf ^{(3)}, according sample-components. However, necessary compartmentalize 𝐚m\\mathbf a_m part model. Age identity population identity similar structure, 𝐚m\\mathbf a_m also composed 0’s 1 length CC. ,ca_{m,c} age identity mmth mixture individual ccth age class, ,c=1a_{m,c} = 1 individual mm age class cc, ,c=0a_{m,c} = 0 otherwise. example, three age classes fish #6 age 3, 𝐚6={0,0,1}\\mathbf a_6 = \\{0, 0, 1\\}. place multinomial distribution ,1,,2,...,,Ca_{m,1}, a_{m,2}, ..., a_{m,C} size 1 probabilities equal age-class frequencies 𝐳m⋅𝛑\\mathbf z_m \\cdot \\mathbf \\pi, 𝛑\\mathbf \\pi denotes age-class frequencies within population 1 K+HK+H. can picture 𝛑\\mathbf \\pi matrix K+HK+H populations rows CC age classes columns. Therefore, multiplying population identities, zm,1,zm,2,...,zm,Kz_{m,1}, z_{m,2}, ..., z_{m,K}, age-class frequencies, 𝛑1,{1,2,...,C},𝛑2,{1,2,...,C},...,𝛑K+H,{1,2,...,C}\\mathbf \\pi_{1,\\{1,2,...,C\\}}, \\mathbf \\pi_{2,\\{1,2,...,C\\}}, ..., \\mathbf \\pi_{K+H,\\{1,2,...,C\\}}, age-class frequencies within population individual mm belong remain rest goes zero. specify Dirichlet prior πk,1,πk,2,...,πk,C\\pi_{k,1}, \\pi_{k,2}, ..., \\pi_{k,C} hyperparameters γ1,γ2,...,γC=1/C\\gamma_1, \\gamma_2, ..., \\gamma_C = 1/C. express 𝐚\\mathbf prior 𝛑\\mathbf \\pi follows: 𝐚m∼Mult(𝟏,𝐳m⋅𝛑)\\mathbf a_m \\sim Mult(\\mathbf 1, \\mathbf z_m \\cdot \\mathbf \\pi) 𝛑∼Dirich(𝛄)\\mathbf \\pi \\sim Dirich(\\mathbf \\gamma), 𝛄=1/C\\mathbf \\gamma = 1/C Estimation MAGMA parameters requires deriving conditional distributions 𝐩,𝐪,𝐳(1),𝐳(2),𝛑|𝐱,𝐲,𝐳(3),𝐚,𝛂,𝛃,𝛄\\mathbf p, \\mathbf q, \\mathbf z^{(1)}, \\mathbf z^{(2)}, \\mathbf\\pi|\\mathbf x, \\mathbf y, \\mathbf z^{(3)}, \\mathbf , \\mathbf\\alpha, \\mathbf\\beta, \\mathbf\\gamma. next section, introduce concepts algorithm sample posterior distribution.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"gibbs-sampler","dir":"Articles","previous_headings":"Background and Methods","what":"Gibbs Sampler","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"Gibbs sampler type Markov chain Monte Carlo (MCMC) methods sequentially sample parameter values Markov chain. enough sampling, Markov chain eventually converge joint posterior distribution parameters. appealing quality Gibbs sampler reduction multivariate problem (Pella-Masuda MAGMA models) series manageable lower-dimensional problems. full description Gibbs sampler MCMC methods beyond scope document; however, information can found numerous resources devoting Bayesian data analysis (see Carlin & Louis, 2009; Robert & Casella, 2010; Gelman et al., 2014) illustrate, suppose like determine joint posterior distribution interest, p(𝛉|𝐲)p(\\mathbf \\theta|\\mathbf y), 𝛉={θ1,θ2,...,θK}\\mathbf \\theta = \\{\\theta_1, \\theta_2,..., \\theta_K\\}. likely multivariate p(𝛉|𝐲)p(\\mathbf \\theta|\\mathbf y) complicated sample . However, can figure break joint posterior distribution individual full conditional distributions6, parameter 𝛉\\mathbf \\theta can sampled one one sequentially using Gibbs sampler algorithm. process begins arbitrary set starting values θ2(0),θ3(0),...,θK(0)\\theta^{(0)}_2, \\theta^{(0)}_3,..., \\theta^{(0)}_K proceeds follows: t=1,2,...,Tt = 1,2,...,T, repeat Draw θ1(t)\\theta^{(t)}_1 p(θ1|θ2(t−1),θ3(t−1),...,θk(t−1),𝐲)p(\\theta_1|\\theta^{(t-1)}_2, \\theta^{(t-1)}_3,..., \\theta^{(t-1)}_k, \\mathbf y) Draw θ2(t)\\theta^{(t)}_2 p(θ2|θ1(t),θ3(t−1),...,θk(t−1),𝐲)p(\\theta_2|\\theta^{(t)}_1, \\theta^{(t-1)}_3,..., \\theta^{(t-1)}_k, \\mathbf y) ⋮ Draw θk(t)\\theta^{(t)}_k p(θk|θ1(t),θ2(t),...,θk−1(t),𝐲)p(\\theta_k|\\theta^{(t)}_1, \\theta^{(t)}_2,..., \\theta^{(t)}_{k-1}, \\mathbf y) work best full conditionals known distributions can easily sample (although ’s required). case MAGMA model, rely two main concepts, Bayes theorem conjugacy, trick. Briefly, estimating parameters 𝛉\\mathbf\\theta data 𝐃\\mathbf D, according Bayes Rule, p(𝛉|𝐃)=p(𝐃|𝛉)p(𝛉)p(𝐃)p(\\mathbf\\theta|\\mathbf D) = \\displaystyle \\frac{p(\\mathbf D|\\mathbf\\theta)p(\\mathbf\\theta)}{p(\\mathbf D)}. p(𝛉|𝐃)p(\\mathbf\\theta|\\mathbf D) joint posterior distribution parameters 𝛉\\mathbf\\theta, p(𝐃|𝛉)p(\\mathbf D|\\mathbf\\theta) likelihood observing data given parameters, p(𝛉)p(\\mathbf\\theta) prior distribution parameters, p(𝐃)p(\\mathbf D) constant marginal distribution data. p(𝐃)p(\\mathbf D) often mathematically difficult obtain; however, p(𝐃)p(\\mathbf D) constant number, can ignore reducing posterior distribution p(𝛉|𝐃)∝p(𝐃|𝛉)p(𝛉)p(\\mathbf\\theta|\\mathbf D) \\propto p(\\mathbf D|\\mathbf\\theta)p(\\mathbf\\theta). , Bayes Rule help us estimating parameters MAGMA model? First, joint posterior distribution split smaller pieces. , separate joint posterior likelihood data priors parameters: p(𝐩,𝐪,𝐳(1),𝐳(2),𝛑|𝐱,𝐲,𝐚,𝐳(3),𝛂,𝛃,𝛄)p(\\mathbf p, \\mathbf q, \\mathbf z^{(1)}, \\mathbf z^{(2)}, \\mathbf\\pi|\\mathbf x, \\mathbf y, \\mathbf , \\mathbf z^{(3)}, \\mathbf\\alpha, \\mathbf\\beta, \\mathbf\\gamma) ∝p(𝐱|𝐳(1),𝐪)p(𝐲|𝐪)p(𝐚|𝐳,𝛑)p(𝐳(3)|𝐩)⋅p(𝐩|𝛂)p(𝐪|𝛃)p(𝐳(1)|𝐩)p(𝐳(2)|𝐩)p(𝛑|𝛄)\\propto p(\\mathbf x|\\mathbf z^{(1)}, \\mathbf q) p(\\mathbf y|\\mathbf q) p(\\mathbf |\\mathbf z,\\mathbf\\pi) p(\\mathbf z^{(3)}|\\mathbf p) \\cdot p(\\mathbf p|\\mathbf\\alpha) p(\\mathbf q|\\mathbf\\beta) p(\\mathbf z^{(1)}|\\mathbf p) p(\\mathbf z^{(2)}|\\mathbf p) p(\\mathbf \\pi|\\mathbf\\gamma) =p(𝐱|𝐳(1),𝐪)p(𝐲|𝐪)p(𝐚|𝐳,𝛑)⋅p(𝐩|𝛂)p(𝐪|𝛃)p(𝐳|𝐩)p(𝛑|𝛄)= p(\\mathbf x|\\mathbf z^{(1)}, \\mathbf q) p(\\mathbf y|\\mathbf q) p(\\mathbf |\\mathbf z,\\mathbf\\pi) \\cdot p(\\mathbf p|\\mathbf\\alpha) p(\\mathbf q|\\mathbf\\beta) p(\\mathbf z|\\mathbf p) p(\\mathbf \\pi|\\mathbf\\gamma) re-arrangements hand-waving, arrive conditional distributions 𝐪\\mathbf q, 𝐩\\mathbf p, 𝛑\\mathbf\\pi: p(𝐱|𝐳(1),𝐪)p(𝐲|𝐪)p(𝐚|𝐳,𝛑)⋅p(𝐩|𝛂)p(𝐪|𝛃)p(𝐳|𝐩)p(𝛑|𝛄)p(\\mathbf x|\\mathbf z^{(1)}, \\mathbf q) p(\\mathbf y|\\mathbf q) p(\\mathbf |\\mathbf z,\\mathbf\\pi) \\cdot p(\\mathbf p|\\mathbf\\alpha) p(\\mathbf q|\\mathbf\\beta) p(\\mathbf z|\\mathbf p) p(\\mathbf \\pi|\\mathbf\\gamma) =p(𝐱|𝐳(1),𝐪)p(𝐲|𝐪)p(𝐪|𝛃)⋅p(𝐳|𝐩)p(𝐩|𝛂)⋅p(𝐚|𝐳,𝛑)p(𝛑|𝛄)= p(\\mathbf x|\\mathbf z^{(1)}, \\mathbf q) p(\\mathbf y|\\mathbf q) p(\\mathbf q|\\mathbf\\beta) \\cdot p(\\mathbf z|\\mathbf p) p(\\mathbf p|\\mathbf\\alpha) \\cdot p(\\mathbf |\\mathbf z,\\mathbf\\pi) p(\\mathbf \\pi|\\mathbf\\gamma) ∝p(𝐱,𝐲,𝐳(1)|𝐪)p(𝐪|𝛃)⋅p(𝐳|𝐩)p(𝐩|𝛂)⋅p(𝐚,𝐳|𝛑)p(𝛑|𝛄)\\propto p(\\mathbf x,\\mathbf y,\\mathbf z^{(1)}|\\mathbf q) p(\\mathbf q|\\mathbf\\beta) \\cdot p(\\mathbf z|\\mathbf p) p(\\mathbf p|\\mathbf\\alpha) \\cdot p(\\mathbf ,\\mathbf z|\\mathbf\\pi) p(\\mathbf \\pi|\\mathbf\\gamma) ∝p(𝐪|𝐱,𝐲,𝐳(1),𝛃)⋅p(𝐩|𝐳,𝛂)⋅p(𝛑|𝐚,𝐳,𝛄)\\propto p(\\mathbf q|\\mathbf x,\\mathbf y,\\mathbf z^{(1)},\\mathbf\\beta) \\cdot p(\\mathbf p|\\mathbf z,\\mathbf\\alpha) \\cdot p(\\mathbf \\pi|\\mathbf ,\\mathbf z,\\mathbf\\gamma) Next, take advantage mathematical property called conjugacy help us determine full conditional distributions. Based property, posterior distribution follows parametric form prior distribution prior conjugate family likelihood. example, likelihood data binomial distribution prior parameter beta distribution, posterior also beta distribution beta conjugate family binomial. many conjugate families, Dirichlet multinomial another example. Utilizing conjugacy property, determine conditional distributions 𝐪\\mathbf q, 𝐩\\mathbf p, 𝛑\\mathbf\\pi.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"conditional-distribution-pqx-y-z1-beta","dir":"Articles","previous_headings":"Background and Methods > Gibbs Sampler","what":"Conditional distribution p(q|x, y, z(1), β\\beta)","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"determine p(𝐪|𝐱,𝐲,𝐳(1),𝛃)p(\\mathbf q|\\mathbf x,\\mathbf y,\\mathbf z^{(1)},\\mathbf\\beta) Dirichlet-distributed Dirichlet prior p(𝐪|𝛃)p(\\mathbf q|\\mathbf\\beta) conjugate family multinomial likelihoods p(𝐱|𝐳(1),𝐪)p(\\mathbf x|\\mathbf z^{(1)}, \\mathbf q) p(𝐲|𝐪)p(\\mathbf y|\\mathbf q). determine exact parameterization posterior distribution, need derive prior likelihoods first. Likelihood p(𝐱|𝐳(1),𝐪)p(\\mathbf x|\\mathbf z^{(1)}, \\mathbf q) can derived two steps. first step conditioned likelihood 𝐳(1)\\mathbf z^{(1)} p(𝐱|𝐳(1),𝐪)∝∏m=1M(1)∏k=1K[f(𝐱m|𝐪k)]zm,k(1)p(\\mathbf x|\\mathbf z^{(1)}, \\mathbf q) \\propto \\displaystyle \\prod^{M^{(1)}}_{m=1} \\prod^{K}_{k=1} [f(\\mathbf x_m|\\mathbf q_k)]^{z^{(1)}_{m,k}}, f(𝐱m|𝐪k)f(\\mathbf x_m|\\mathbf q_k) relative frequency multi-locus genotype individual mm population kk. next step, derive f(𝐱m|𝐪k)f(\\mathbf x_m|\\mathbf q_k): f(𝐱m|𝐪k)∝∏l=1L∏j=1Jlqk,l,jxm,l,jf(\\mathbf x_m|\\mathbf q_k) \\propto \\displaystyle \\prod^{L}_{l=1} \\prod^{J_l}_{j=1} q^{x_{m,l,j}}_{k,l,j} combine two, p(𝐱|𝐳(1),𝐪)∝∏m=1M(1)∏k=1K[f(𝐱m|𝐪k)]zm,k(1)p(\\mathbf x|\\mathbf z^{(1)}, \\mathbf q) \\propto \\displaystyle \\prod^{M^{(1)}}_{m=1} \\prod^{K}_{k=1} [f(\\mathbf x_m|\\mathbf q_k)]^{z^{(1)}_{m,k}} ∝∏m=1M(1)∏k=1K[∏l=1L∏j=1Jlqk,l,jxm,l,j⋅zm,k(1)]\\propto \\displaystyle \\prod^{M^{(1)}}_{m=1} \\prod^{K}_{k=1} [\\displaystyle \\prod^{L}_{l=1} \\prod^{J_l}_{j=1} q^{x_{m,l,j} \\cdot z^{(1)}_{m,k}}_{k,l,j}] ∝∏k=1K∏l=1L∏j=1Jlqk,l,j∑m=1M(1)(xm,l,j⋅zm,k(1))\\propto \\displaystyle \\prod^{K}_{k=1} \\prod^{L}_{l=1} \\prod^{J_l}_{j=1} q^{\\sum^{M^{(1)}}_{m=1} (x_{m,l,j} \\cdot z^{(1)}_{m,k})}_{k,l,j} Deriving likelihood p(𝐲|𝐪)p(\\mathbf y|\\mathbf q) straightforward. product relative frequency multi-locus genotype population: p(𝐲|𝐪)∝∏k=1K∏l=1L∏j=1Jlqk,l,jyk,l,jp(\\mathbf y|\\mathbf q) \\propto \\displaystyle \\prod^{K}_{k=1} \\prod^{L}_{l=1} \\prod^{J_l}_{j=1} q^{y_{k,l,j}}_{k,l,j} p(q|𝛃)p(q|\\mathbf\\beta) Dirichlet prior distribution. probability density kernel7 𝐪𝛃−1\\mathbf q^{\\mathbf \\beta - 1}. can express likelihood p(𝐪|𝛃)∝∏k=1K∏l=1L∏j=1Jlqk,l,jβl,j−1p(\\mathbf q|\\mathbf\\beta) \\propto \\displaystyle \\prod^{K}_{k=1} \\prod^{L}_{l=1} \\prod^{J_l}_{j=1} q^{\\beta_{l,j} - 1}_{k,l,j}. Put likelihoods together, p(𝐪|𝐱,𝐲,𝐳(1),𝛃)∝p(𝐱|𝐳(1),𝐪)p(𝐲|𝐪)p(𝐪|𝛃)p(\\mathbf q|\\mathbf x,\\mathbf y,\\mathbf z^{(1)},\\mathbf\\beta) \\propto p(\\mathbf x|\\mathbf z^{(1)}, \\mathbf q) p(\\mathbf y|\\mathbf q) p(\\mathbf q|\\mathbf\\beta) ∝∏k=1K∏l=1L∏j=1Jlqk,l,j∑m=1M(1)(xm,l,j⋅zm,k(1))⋅∏k=1K∏l=1L∏j=1Jlqk,l,jyk,l,j⋅∏k=1K∏l=1L∏j=1Jlqk,l,jβl,j−1\\propto \\displaystyle \\prod^{K}_{k=1} \\prod^{L}_{l=1} \\prod^{J_l}_{j=1} q^{\\sum^{M^{(1)}}_{m=1} (x_{m,l,j} \\cdot z^{(1)}_{m,k})}_{k,l,j} \\cdot \\displaystyle \\prod^{K}_{k=1} \\prod^{L}_{l=1} \\prod^{J_l}_{j=1} q^{y_{k,l,j}}_{k,l,j} \\cdot \\displaystyle \\prod^{K}_{k=1} \\prod^{L}_{l=1} \\prod^{J_l}_{j=1} q^{\\beta_{l,j} - 1}_{k,l,j} =∏k=1K∏l=1L∏j=1Jlqk,l,j∑m=1M(1)(xm,l,j⋅zm,k(1))+yk,l,j+βl,j−1= \\displaystyle \\prod^{K}_{k=1} \\prod^{L}_{l=1} \\prod^{J_l}_{j=1} q^{\\sum^{M^{(1)}}_{m=1} (x_{m,l,j} \\cdot z^{(1)}_{m,k}) + y_{k,l,j} + \\beta_{l,j} - 1}_{k,l,j} elementary anybody recognize ∏k=1K∏l=1L∏j=1Jlqk,l,j∑m=1M(1)(xm,l,j⋅zm,k(1))+yk,l,j+βl,j−1\\displaystyle \\prod^{K}_{k=1} \\prod^{L}_{l=1} \\prod^{J_l}_{j=1} q^{\\sum^{M^{(1)}}_{m=1} (x_{m,l,j} \\cdot z^{(1)}_{m,k}) + y_{k,l,j} + \\beta_{l,j} - 1}_{k,l,j} kernel Dirichlet distribution. Hence, 𝐪k,l|𝐱,𝐲,𝐳(1),𝛃∼Dirich(∑m=1M(1)xm,l,jzm,k(1)+yk,l,j+βl,j)\\mathbf q_{k,l}|\\mathbf x,\\mathbf y,\\mathbf z^{(1)},\\mathbf\\beta \\sim Dirich(\\displaystyle \\sum^{M^{(1)}}_{m=1} x_{m,l,j} z^{(1)}_{m,k} + y_{k,l,j} + \\beta_{l,j})","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"conditional-distribution-ppz-alpha","dir":"Articles","previous_headings":"Background and Methods > Gibbs Sampler","what":"Conditional distribution p(p|z, α\\alpha)","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"Using logic previously, p(𝐩|𝐳,𝛂)p(\\mathbf p|\\mathbf z,\\mathbf\\alpha) also Dirichlet-distributed due Dirichlet prior p(𝐩|𝛂)p(\\mathbf p|\\mathbf\\alpha) multinomial likelihood p(𝐳|𝐩)p(\\mathbf z|\\mathbf p). p(𝐩|𝐳,𝛂)∝p(𝐳|𝐩)p(𝐩|𝛂)p(\\mathbf p|\\mathbf z,\\mathbf\\alpha) \\propto p(\\mathbf z|\\mathbf p) p(\\mathbf p|\\mathbf\\alpha) ∝∏m=1M∏k=1K+Hpkzm,k⋅∏k=1K+Hpkαk−1\\propto \\displaystyle \\prod^{M}_{m=1} \\prod^{K+H}_{k=1} p^{z_{m,k}}_k \\cdot \\prod^{K+H}_{k=1} p^{\\alpha_k - 1}_k ∝∏k=1K+Hpk∑m=1Mzm,k+αk−1\\propto \\displaystyle \\prod^{K+H}_{k=1} p^{\\sum^M_{m=1}z_{m,k} + \\alpha_k - 1}_k , recognize kernel Dirichlet distribution: 𝐩|𝐳,𝛂∼Dirich(∑m=1Mzm,k+αk)\\mathbf p|\\mathbf z,\\mathbf\\alpha \\sim Dirich(\\displaystyle \\sum^M_{m=1}z_{m,k} + \\alpha_k)","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"conditional-distribution-ppia-z-gamma","dir":"Articles","previous_headings":"Background and Methods > Gibbs Sampler","what":"Conditional distribution p(π\\pi|a, z, γ\\gamma)","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"Lastly, p(𝛑|𝐚,𝐳,𝛄)p(\\mathbf \\pi|\\mathbf ,\\mathbf z,\\mathbf\\gamma) also Dirichlet-distributed due Dirichlet prior p(𝛑|𝛄)p(\\mathbf \\pi|\\mathbf\\gamma) multinomial likelihood p(𝐚|𝐳,𝛑)p(\\mathbf |\\mathbf z,\\mathbf\\pi). p(𝛑|𝐚,𝐳,𝛄)∝p(𝐚|𝐳,𝛑)p(𝛑|𝛄)p(\\mathbf \\pi|\\mathbf ,\\mathbf z,\\mathbf\\gamma) \\propto p(\\mathbf |\\mathbf z,\\mathbf\\pi) p(\\mathbf \\pi|\\mathbf\\gamma) ∝∏m=1M∏k=1K+H[h(𝐚m|𝛑k)]zm,k⋅∏k=1K+H∏c=1Cπk,cγc−1\\propto \\displaystyle \\prod^{M}_{m=1}\\prod^{K+H}_{k=1}[h(\\mathbf a_m|\\mathbf\\pi_k)]^{z_{m,k}} \\cdot \\prod^{K+H}_{k=1}\\prod^{C}_{c=1}\\pi^{\\gamma_c - 1}_{k,c}, likelihood h(𝐚m|𝛑k)∝∏c=1Cπk,cam,kh(\\mathbf a_m|\\mathbf\\pi_k) \\propto \\displaystyle \\prod^C_{c=1}\\pi^{a_{m,k}}_{k,c} product relative frequency age class individual mm population kk. Plugging h(𝐚m|𝛑k)h(\\mathbf a_m|\\mathbf\\pi_k), ∏m=1M∏k=1K+H[h(𝐚m|𝛑k)]zm,k⋅∏k=1K+H∏c=1Cπk,cγc−1\\displaystyle \\prod^{M}_{m=1}\\prod^{K+H}_{k=1}[h(\\mathbf a_m|\\mathbf\\pi_k)]^{z_{m,k}} \\cdot \\prod^{K+H}_{k=1}\\prod^{C}_{c=1}\\pi^{\\gamma_c - 1}_{k,c} =∏m=1M∏k=1K+H[∏c=1Cπk,cam,kzm,k]⋅∏k=1K+H∏c=1Cπk,cγc−1= \\displaystyle \\prod^{M}_{m=1}\\prod^{K+H}_{k=1}[\\displaystyle \\prod^C_{c=1}\\pi^{a_{m,k}z_{m,k}}_{k,c}] \\cdot \\prod^{K+H}_{k=1}\\prod^{C}_{c=1}\\pi^{\\gamma_c - 1}_{k,c} =∏k=1K+H∏c=1Cπk,c∑m=1Mam,kzm,k⋅∏k=1K+H∏c=1Cπk,cγc−1= \\displaystyle \\prod^{K+H}_{k=1}\\displaystyle \\prod^C_{c=1}\\pi^{\\sum^M_{m=1}a_{m,k}z_{m,k}}_{k,c} \\cdot \\prod^{K+H}_{k=1}\\prod^{C}_{c=1}\\pi^{\\gamma_c - 1}_{k,c} =∏k=1K+H∏c=1Cπk,c∑m=1Mam,kzm,k+γc−1= \\displaystyle \\prod^{K+H}_{k=1}\\displaystyle \\prod^C_{c=1}\\pi^{\\sum^M_{m=1}a_{m,k}z_{m,k}+ \\gamma_c - 1}_{k,c} recognize kernel Dirichlet distribution: 𝛑k|𝐚,𝐳,𝛄∼Dirich(∑m=1Mam,kzm,k+γc)\\mathbf \\pi_k|\\mathbf , \\mathbf z, \\mathbf\\gamma \\sim Dirich(\\displaystyle \\sum^M_{m=1}a_{m,k}z_{m,k} + \\gamma_c)","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"algorithm","dir":"Articles","previous_headings":"Background and Methods > Gibbs Sampler","what":"Algorithm","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"one distribution figure can start Gibbs sampler routine (thought ’re set, lol). need know sample 𝐳m(1,2)|𝐩,𝐪,𝐱m(1,2),𝛑,𝐚m(1,2)\\mathbf z^{(1,2)}_m|\\mathbf p, \\mathbf q, \\mathbf x^{(1,2)}_m, \\mathbf\\pi, \\mathbf ^{(1,2)}_m, population identity individual fish mm (components 1 2) given population proportions, genotype, age. probability fish mm belong population kk pkp_k, likelihood observing relative frequency genotype age class fish mm population kk f(𝐱m(1,2)|𝐪k)⋅h(𝐚m(1,2)|𝛑k)f(\\mathbf x^{(1,2)}_m|\\mathbf q_k) \\cdot h(\\mathbf ^{(1,2)}_m|\\mathbf\\pi_k), probability fish mm belong population kk given population proportions genotype, age pk⋅f(𝐱m(1,2)|𝐪k)⋅h(𝐚m(1,2)|𝛑k)∑k′=1Kpk′⋅f(𝐱m(1,2)|𝐪k′)⋅h(𝐚m(1,2)|𝛑k′)\\displaystyle \\frac{p_k \\cdot f(\\mathbf x^{(1,2)}_m|\\mathbf q_k) \\cdot h(\\mathbf ^{(1,2)}_m|\\mathbf\\pi_k)}{\\sum^K_{k'=1}p_{k'} \\cdot f(\\mathbf x^{(1,2)}_m|\\mathbf q_{k'}) \\cdot h(\\mathbf ^{(1,2)}_m|\\mathbf\\pi_{k'})}. denominator sum one, need calculate numerator. 𝐳m(1,2)|𝐩,𝐪,𝐱m(1,2),𝛑,𝐚m(1,2)\\mathbf z^{(1,2)}_m|\\mathbf p, \\mathbf q, \\mathbf x^{(1,2)}_m, \\mathbf\\pi, \\mathbf ^{(1,2)}_m following distribution: 𝐳m(1,2)|𝐩,𝐪,𝐱m(1,2),𝛑,𝐚m(1,2)∼Mult(1,𝐩′m)\\mathbf z^{(1,2)}_m|\\mathbf p, \\mathbf q, \\mathbf x^{(1,2)}_m, \\mathbf\\pi, \\mathbf ^{(1,2)}_m \\sim Mult(1, \\mathbf{p'}_m), p′m,k=pk⋅f(𝐱m(1,2)|𝐪k)⋅h(𝐚m(1,2)|𝛑k)p'_{m,k} = p_k \\cdot f(\\mathbf x^{(1,2)}_m|\\mathbf q_k) \\cdot h(\\mathbf ^{(1,2)}_m|\\mathbf\\pi_k). draw initial values 𝐪k\\mathbf q_k 𝛑k\\mathbf \\pi_k based prior distributions. figured pieces Gibbs sampler, may begin process starting values 𝐩(0)\\mathbf p^{(0)}, 𝐪(0)\\mathbf q^{(0)}, 𝛑(0)\\mathbf \\pi^{(0)}. fish aged, 𝐚m(1,2)(0)\\mathbf ^{(1,2)(0)}_m initial step contain 0’s individuals without assigned age. problem age class determined subsequent steps. proceed follows: t=1,2,...,Tt = 1,2,...,T, repeat Determine population membership mixture individuals, 𝐳m(1,2)(t)|𝐩(t−1),𝐪(t−1),𝐱m(1,2),𝛑(t−1),𝐚m(1,2)(t−1)∼Mult(1,𝐩′m){{\\mathbf z}^{(1,2)}_m}^{(t)}|\\mathbf p^{(t-1)}, \\mathbf q^{(t-1)}, \\mathbf x^{(1,2)}_m, \\mathbf\\pi^{(t-1)}, {{\\mathbf }^{(1,2)}_m}^{(t-1)} \\sim Mult(1, \\mathbf {p'}_m). individuals aged, determine memberships age classes unknown age, 𝐚m(t)|𝐳m(t),𝛑(t−1)∼Mult(1,𝐳m(t)𝛑(t−1))\\mathbf ^{(t)}_m|\\mathbf z^{(t)}_m, \\mathbf \\pi^{(t-1)} \\sim Mult(1, \\mathbf z^{(t)}_m \\mathbf\\pi^{(t-1)}). Draw updated values 𝐪(t)\\mathbf q^{(t)}, 𝐩(t)\\mathbf p^{(t)}, 𝛑(t)\\mathbf\\pi^{(t)} p(𝐪|𝐱,𝐲,𝐳(1)(t),𝛃)p(\\mathbf q|\\mathbf x,\\mathbf y,{{\\mathbf z}^{(1)}}^{(t)},\\mathbf\\beta), p(𝐩|𝐳(t),𝛂)p(\\mathbf p|\\mathbf z^{(t)},\\mathbf \\alpha), p(𝛑|𝐚(t),𝐳(t),𝛄)p(\\mathbf \\pi|\\mathbf ^{(t)},\\mathbf z^{(t)},\\mathbf \\gamma) respectively. TT large enough ensure sampler chain converges posterior distribution parameters. Usually takes thousands iterations. completes Gibbs sampler process. Whew. Implementing conditional GSI model requires slight modification algorithm. Basically, f(𝐱m(1,2)|𝐪k)f(\\mathbf x^{(1,2)}_m|\\mathbf q_k) need derived beginning process, 𝐪\\mathbf q longer need updated step 3. Everything else stay . eventually realized purely conditional GSI algorithm work MAGMA baseline allele frequencies needed updated age frequencies updated well. Instead, adapted algorithm hybrid conditional fully Bayesian GSI. Mainly, run model conditional GSI algorithm fully Bayesian algorithm every 10th iteration.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/magma-vignette.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"How not to be engulfed by MAGMA: instructions and model descriptions","text":"Carlin, B. T. Louis. 2009. Bayesian Methods Data Analysis, 3rd Edition. CRC Press. New York. Gelman, ., J. Carlin, H. Stern, D. Dunson, . Vehtari D. Rubin. Bayesian Data Analysis, 3rd Edition. CRC Press. New York. Johnson, N.L., Kotz, S., Balakrishnan, N. 1997. Discrete multivariate distributions. Wiley & Sons, New York. Moran, B.M. E.C. Anderson. 2018. Bayesian inference conditional genetic stock identification model. Canadian Journal Fisheries Aquatic Sciences. 76(4):551-560. https://doi.org/10.1139/cjfas-2018-0016 Pella, J. M. Masuda. 2001. Bayesian methods analysis stock mixtures genetic characters. Fish. Bull. 99:151–167. Robert, C. G. Casella. 2010. Introducing Monte Carlo Methods R. Springer. New York.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"objectives","dir":"Articles","previous_headings":"","what":"Objectives","title":"Comparing MAGMA model algorithms","text":"Compare model algorithms “fully Bayesian” “conditional GSI” MAGMA assessing error, deviation, bias MCMC convergence estimates.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Comparing MAGMA model algorithms","text":"MAGMA Bayesian mixture model used GSI applications. “run” MAGMA model, employ MCMC algorithm estimate stock proportions, age--stock composition, individual group membership assignments. MAGMA algorithm modified mixture model first developed Pella Masuda (2001; .e., Pella-Masuda model “fully Bayesian” model). underlying principles MAGMA Pella-Masuda models , except MAGMA incorporates age marking information addition genetics. Also, MAGMA designed analyses containing multiple strata, makes running MAGMA model computationally intensive Pella-Masuda model. say Pella-Masuda model simple; intricate algorithm running program BAYES can time-consuming process. decrease time spent running model (improve convergence MCMC sampler), Moran Anderson (2018) developed conditional mixture model modifying Pella-Masuda model. conditional model (.e., “conditional GSI”) streamlines fully Bayesian algorithm eliminating step recalculate allele frequencies baseline populations. step often referred “baseline re-sampling,” , iteration MCMC sampling, mixture individuals assigned new population membership, allele frequencies population can shift due changes membership. Therefore, fully Bayesian algorithm, allele frequencies re-calculated iteration. step can computational intensive large mixture sample /big genetic marker set. Moran Anderson (2018) found baseline re-sampling step can mathematically integrated model algorithm, resulting conditional model yield results fully Bayesian model without computationally intensive calculations. incorporate conditional model sampling algorithm MAGMA, modifications incorporate age marking information. Basically, modifications MAGMA algorithm hybrid fully Bayesian conditional models. However, assessed effects hybrid model estimation MAGMA setting. document, use cross-validation analysis assess possible effects hybrid conditional GSI accuracy precision MAGMA model.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"update-for-october-2024-lynn-canal","dir":"Articles","previous_headings":"Background","what":"Update for October 2024 (Lynn Canal)","title":"Comparing MAGMA model algorithms","text":"updated analysis Lynn Canal sockeye baseline multi-stratum set . Lynn Canal post-season reporting 251 collections divided seven groups. Majority collections included “” reporting group. age, 15 classes total. Five major age classes (03, 12, 13, 22, 23), rest included “.”","code":""},{"path":[]},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"yukon-chinook","dir":"Articles","previous_headings":"Methods","what":"Yukon Chinook","title":"Comparing MAGMA model algorithms","text":"used Yukon Chinook baseline simulation. Chinook baseline modified previous analysis contained portion original collections. modified baseline marker-set 380 loci differentiate Chinook salmon among four reporting groups middle/upper Yukon River (Koyukuk, Tanana, Upper U.S., Canada; Lee et al. 2021). used modified baseline generate 100 sets MAGMA mixtures (one district, one subdistrict, one week) randomly set age--stock compositions, ran mixtures using hybrid conditional GSI fully Bayesian algorithms. Finally, calculated compared root mean-square-errors (RMSE), deviations, mean bias 100 simulations. Procedures generating one set MAGMA data follows: Randomly set proportions four reporting groups. Based set proportions, randomly allocate 190 individuals populations within reporting group. Simulate genotypes mixture individuals based baseline allele frequencies corresponding assigned population memberships. simulated values drawn multinomial distributions. randomly set proportions age--stock compositions. age--stock composition 4×94 \\times 9 matrix rows represent reporting groups columns represent age classes. nine age classes ages 1.1, 1.2, 1.3, 2.1, 2.2, 2.3, 3.1, 3.2, 3.3. proportions ages 1.1, 1.2, 3.3 always 0’s analysis, rest randomly set. age proportions within reporting group add 1. Assign age mixture individual based assigned reporting group membership. Randomly withheld age identities 15% mixture individuals. Format data set MAGMA model (using magmatize data() function). one district, one subdistrict, one week mixture data set. ran 100 MAGMA data sets two model algorithms: 1) “conditional GSI”: hybrid algorithms re-sample baseline allele frequencies every 10th iteration 2) “fully Bayesian”: re-sample baseline allele frequencies every iteration. ran model 1,000 iterations, 500 burn-ins, thinning, four chains “zero ” age priors. compared posterior means true proportions nine age classes calculated RMSE bias/deviation. RMSE calculated 1n∑=1n(Yi−Ŷ)2\\sqrt{\\frac{1}{n} \\sum_{=1}^{n} (Y_i - \\hat Y_i)^2}, nn number cross-validation analyses, YiY_i true proportion age yy iith analysis, Ŷ\\hat Y_i posterior mean proportion age yy iith analysis. Mean bias mean differences posterior mean true proportion age class cross-validation analysis. “Deviation ≥\\geq 0.1” quantified portion cross-validation analyses absolute biases greater equal 0.1.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"update-for-october-2024-lynn-canal-1","dir":"Articles","previous_headings":"Methods","what":"Update for October 2024 (Lynn Canal)","title":"Comparing MAGMA model algorithms","text":"Simulations Lynn Canal followed procedures , addition multiple strata. one district two subdistricts two weeks . Age--stock composition 7×157 \\times 15 matrix whole district. ran two sets simulations. first set 0 portion minor age classes. second set small portion (randomly set) minor age classes. Harvest randomly selected 2023 harvest record represent simulated harvest four strata iteration analysis. Sample size stratum randomly drawn negative binomial distribution mean 190 fish dispersion parameter 8 (Neg-bin(μ\\mu = 190, size = 8)).","code":""},{"path":[]},{"path":[]},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"precision","dir":"Articles","previous_headings":"Results > Yukon Chinook","what":"Precision","title":"Comparing MAGMA model algorithms","text":"plotted comparisons posterior means true values performances similar two algorithms four reporting groups (Figure 1). Figure 1: Comparison posterior means true values 100 cross-validation analyses two model algorithms: ‘Cond. GSI’ ‘Fully Bayes.’ Diagonal line represents 1:1 relationship true proportions posterior means. Dashed lines mark ± 0.1 deviation 1:1 line.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"rmse","dir":"Articles","previous_headings":"Results > Yukon Chinook","what":"RMSE","title":"Comparing MAGMA model algorithms","text":"performances two algorithms similar. squint really hard, might find conditional GSI slightly lower RMSE’s Koyukuk Tanana (Table 1; Figure 2). Table 1: Comparison root mean-square-errors age class among two model algorithms. Figure 2: Root mean-square-errors age class two model algorithms.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"bias","dir":"Articles","previous_headings":"Results > Yukon Chinook","what":"Bias","title":"Comparing MAGMA model algorithms","text":"two algorithms MAGMA exhibited similar amount biases (lack thereof) four reporting groups (Figure 3). Figure 3: Bias age class two model algorithms.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"deviation-geq-0-1","dir":"Articles","previous_headings":"Results > Yukon Chinook","what":"Deviation ≥\\geq 0.1","title":"Comparing MAGMA model algorithms","text":"Hybrid conditional GSI seemed perform slightly better fully Bayesian algorithm overall (Table 2; Figure 4). Table 2: Comparison deviation ≥0.1\\geq 0.1 age class among two model algorithms. Figure 4: Deviation ≥\\geq 0.1 age class two model algorithms.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"gelman-rubin-diagnostic-gr","dir":"Articles","previous_headings":"Results > Yukon Chinook","what":"Gelman-Rubin diagnostic (GR)","title":"Comparing MAGMA model algorithms","text":"also compared convergence posterior samples two algorithms plotting Gelman-Rubin shrink factor (GR) 100 simulations overlapping histograms (Figure 5). convergence seemed similar two algorithms. Figure 5: Gelman-Rubin diagnostic (GR) reporting group two model algorithms.","code":""},{"path":[]},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"precision-1","dir":"Articles","previous_headings":"Results > Update for October 2024 (Lynn Canal)","what":"Precision","title":"Comparing MAGMA model algorithms","text":"Comparisons posterior means true values showed performances similar two algorithms seven reporting groups Lynn Canal sockeye baseline (Figure 6).  Figure 6: Comparison posterior means true values 100 cross-validation analyses two model algorithms, ‘Cond. GSI’ ‘Fully Bayes,’ using Lynn Canal sockeye baseline. Diagonal line represents 1:1 relationship true proportions posterior means. Dashed lines mark ± 0.1 deviation 1:1 line.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"rmse-1","dir":"Articles","previous_headings":"Results > Update for October 2024 (Lynn Canal)","what":"RMSE","title":"Comparing MAGMA model algorithms","text":"Errors two algorithms similar Lynn Canal sockeye baseline (Table 3; Figure 7). Table 3: Comparison root mean-square-errors age class among two model algorithms.  Figure 7: Root mean-square-errors age class two model algorithms using Lynn Canal sockeye baseline.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"bias-1","dir":"Articles","previous_headings":"Results > Update for October 2024 (Lynn Canal)","what":"Bias","title":"Comparing MAGMA model algorithms","text":"two algorithms MAGMA exhibited similar amount biases seven reporting groups Lynn Canal sockeye baseline (Figure 8).  Figure 8: Bias age class two model algorithms using Lynn Canal sockeye baseline.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"deviation-geq-0-1-1","dir":"Articles","previous_headings":"Results > Update for October 2024 (Lynn Canal)","what":"Deviation ≥\\geq 0.1","title":"Comparing MAGMA model algorithms","text":"two model configurations seemed similar performance Lynn Canal sockeye baseline (Table 4; Figure 9). Table 4: Comparison deviation ≥0.1\\geq 0.1 age class among two model algorithms.  Figure 9: Deviation ≥\\geq 0.1 age class two model algorithms using Lynn Canal sockeye baseline.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"gelman-rubin-diagnostic-gr-1","dir":"Articles","previous_headings":"Results > Update for October 2024 (Lynn Canal)","what":"Gelman-Rubin diagnostic (GR)","title":"Comparing MAGMA model algorithms","text":"also compared convergence posterior samples two algorithms plotting Gelman-Rubin shrink factor (GR) 100 simulations overlapping histograms (Figure 10). convergence seemed similar two algorithms Lynn Canal sockeye baseline.  Figure 10: Gelman-Rubin diagnostic (GR) reporting group two model algorithms.","code":""},{"path":[]},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"yukon-chinook-2","dir":"Articles","previous_headings":"Discussion","what":"Yukon Chinook","title":"Comparing MAGMA model algorithms","text":"comparison 100 cross-validation analyses two algorithms showed similar precision, RMSE, bias major age classes. Hybrid conditional GSI showed slightly less deviations compared fully Bayesian algorithm. unclear slightly lower portions deviations hybrid conditional GSI due chances actually indication better performance algorithm. However, comparison convergence diagnostics show little differences two algorithms. performance two MAGMA algorithms seems comparable, running time hybrid conditional GSI shorter. considered time run MAGMA model monetary currency, hybrid conditional GSI like Chinese electric vehicle performance fraction price compared US European counterpart. perspective, seems clear benefit run MAGMA using hybrid conditional GSI algorithm1. worth noting analysis comprehensive one stratum simulation. MAGMA usually run multi-stratum scenario, effects multiple strata untested analysis. Also, analysis tested using baseline region used MAGMA. assessments done baselines (preferably regions employed MAGMA) ensure different baselines yield results.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"update-for-october-2024-lynn-canal-3","dir":"Articles","previous_headings":"Discussion","what":"Update for October 2024 (Lynn Canal)","title":"Comparing MAGMA model algorithms","text":"hybrid conditional GSI traditional fully Bayesian algorithms showed similar accuracy precision cross-validation analysis using Lynn Canal sockeye baseline multi-stratum scenario. results consistent previous analysis using Yukon Chinook baseline.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/articles/mdl_comparison.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Comparing MAGMA model algorithms","text":"Lee, E., Dann, T., Hoyt, H. (2021). Yukon River Chinook Genetic Baseline Improvements. Yukon River Panel Restoration Enhancement Fund Final Report, URE-163-19N. Moran, B.M. E.C. Anderson. 2018. Bayesian inference conditional genetic stock identification model. Canadian Journal Fisheries Aquatic Sciences. 76(4):551-560. Pella, J. M. Masuda. 2001. Bayesian methods analysis stock mixtures genetic characters. Fish. Bull. 99:151–167.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bobby Hsu. Author, maintainer.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hsu B (2024). magma.gsi: Mark Age-enhanced Genetic Mixture Analysis. R package version 1.0.0, https://boppingshoe.github.io/magma.gsi/, https://github.com/boppingshoe/magma.gsi.","code":"@Manual{,   title = {magma.gsi: Mark and Age-enhanced Genetic Mixture Analysis},   author = {Bobby Hsu},   year = {2024},   note = {R package version 1.0.0, https://boppingshoe.github.io/magma.gsi/},   url = {https://github.com/boppingshoe/magma.gsi}, }"},{"path":"https://boppingshoe.github.io/magma.gsi/index.html","id":"magmagsi-","dir":"","previous_headings":"","what":"Mark and Age-enhanced Genetic Mixture Analysis","title":"Mark and Age-enhanced Genetic Mixture Analysis","text":"MAGMA slowing moving powerful model combine mark age information genetic mixture analysis. Mainly, MAGMA estimates two sets parameters: stock age. composition two, information often required run reconstruction models, simply product two sets parameters. age/stock compositions strata calculated fashion, multiplied harvest proportions corresponding strata summed get weighted average age/stock composition.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mark and Age-enhanced Genetic Mixture Analysis","text":"can install development version magma.gsi GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"boppingshoe/magma.gsi\", build_vignettes = TRUE)"},{"path":"https://boppingshoe.github.io/magma.gsi/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Mark and Age-enhanced Genetic Mixture Analysis","text":"data sets designated directory, can compile input object: Run model: Summarize results: ’s function package make trace plots inspect mixing chains.  see examples using magma.gsi, can call manual using vignette(\"magma-vignette\", package = \"magma.gsi\") installed magma.gsi.","code":"library(magma.gsi)  wd <- getwd() # path to data folder magma_data <- magmatize_data(wd = paste0(wd, \"/vignettes\"), save_data = FALSE) #> Compiling input data, may take a minute or two... #> FAKE is the fishery identified in the mixture.RData #> No missing hatcheries #> Time difference of 5.265977 secs magma_out <- magmatize_mdl(magma_data, nreps = 50, nburn = 25, thin = 1, nchains = 3) #> Running model... and good things come to High Class In A Fur Coat! #> Time difference of 1.02392 secs #> 2024-10-08 15:09:24.414875 magma_summ <- magmatize_summ(ma_out = magma_out, ma_dat = magma_data, summ_level = \"district\") #> Preparing output (patience grasshopper...) #> Time difference of 0.3430619 secs #> 2024-10-08 15:09:24.774506  magma_summ$age_summ[1] #> $D1_Koyukuk #> # A tibble: 9 × 10 #>   group   age      mean  median     sd      ci.05  ci.95    p0    GR n_eff #>   <chr>   <fct>   <dbl>   <dbl>  <dbl>      <dbl>  <dbl> <dbl> <dbl> <dbl> #> 1 Koyukuk 11    0.0161  0.00441 0.0303 0.00000957 0.0747 0.107  1.05  75   #> 2 Koyukuk 12    0.0165  0.00469 0.0267 0.0000130  0.0700 0.12   1.13  75   #> 3 Koyukuk 13    0.0189  0.00717 0.0282 0.0000248  0.0679 0.173  1.01  75   #> 4 Koyukuk 21    0.00993 0.00323 0.0154 0.00000238 0.0446 0.2    1.07  42.2 #> 5 Koyukuk 22    0.0639  0.0471  0.0603 0.00582    0.177  0      1.02  75   #> 6 Koyukuk 23    0.569   0.585   0.123  0.335      0.714  0      1.02  93.8 #> 7 Koyukuk 31    0.265   0.256   0.0923 0.134      0.431  0      1.02  93.5 #> 8 Koyukuk 32    0.0174  0.00604 0.0286 0.00000185 0.0544 0.133  1.03  75   #> 9 Koyukuk 33    0.0240  0.00626 0.0406 0.0000675  0.128  0.147  1.03  57.1 magmatize_tr_plot(magma_summ$age_prop[[1]])"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preparing MAGMA input data — magmatize_data","title":"Preparing MAGMA input data — magmatize_data","text":"Preparing MAGMA input data","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preparing MAGMA input data — magmatize_data","text":"","code":"magmatize_data(   wd,   age_classes = \"all\",   fishery = NULL,   loci_names = NULL,   save_data = TRUE )"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preparing MAGMA input data — magmatize_data","text":"wd Directory set data folder. age_classes Hard code class categories group ages. fishery Name fishery. optional declare fishery name . fishery can included mixture.RData data folder. loci_names Optional. String containing loci names. save_data Logical (default = TRUE). Option save data data folder.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preparing MAGMA input data — magmatize_data","text":"list objects input data msgsi_mdl()","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preparing MAGMA input data — magmatize_data","text":"","code":"if (FALSE) { # \\dontrun{ wd <- getwd() # path to data folder magma_data <- magmatize_data(wd = wd, save_data = FALSE) } # }"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_indiv.html","id":null,"dir":"Reference","previous_headings":"","what":"Individual group membership assignment summary — magmatize_indiv","title":"Individual group membership assignment summary — magmatize_indiv","text":"Individual group membership assignment summary","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_indiv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Individual group membership assignment summary — magmatize_indiv","text":"","code":"magmatize_indiv(ma_out, ma_dat, out_repunit = FALSE)"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_indiv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Individual group membership assignment summary — magmatize_indiv","text":"ma_out MAGMA model output object name. ma_dat MAGMA input data object name. out_repunit Logical (default = FALSE). Option output summaries populations (FALSE) combined reporting groups (TRUE). NOTE: combining populations reporting group recommend single district multi-district reporting groups.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_indiv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Individual group membership assignment summary — magmatize_indiv","text":"tibble contains probabilities reporting group memberships individual MAGMA metadata.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_indiv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Individual group membership assignment summary — magmatize_indiv","text":"","code":"if (FALSE) { # \\dontrun{ wd <- getwd() # path to data folder magma_data <- magmatize_data(wd = wd, save_data = FALSE) magma_out <- magmatize_mdl(magma_data, nreps = 50, nburn = 25, thin = 1, nchains = 2) magma_assn <- magmatize_indiv(magma_out, magma_datt, out_repunit = TRUE) } # }"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_mdl.html","id":null,"dir":"Reference","previous_headings":"","what":"Run MAGMA model — magmatize_mdl","title":"Run MAGMA model — magmatize_mdl","text":"Run MAGMA model","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_mdl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run MAGMA model — magmatize_mdl","text":"","code":"magmatize_mdl(   dat_in,   nreps,   nburn,   thin,   nchains,   nadapt = 50,   keep_burn = FALSE,   age_prior = \"flat\",   cond_gsi = TRUE,   file = NULL,   seed = NULL,   iden_output = FALSE )"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_mdl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run MAGMA model — magmatize_mdl","text":"dat_in Input data list. nreps Amount simulations run. nburn Number burn-simulations discard. thin interval keep simulations. nchains Number independent MCMC chains run simulation. nadapt Amount warm-/adapt runs simulation (fully Bayesian mode). keep_burn Logical (default = FALSE). keep burn-ins output . age_prior Option adjust prior weight age class proportions. flat (default): conventional setup puts flat prior age proportions. zero_out: prior weight concentrate major age groups observed metadata (.e., \"zero \" unobserved age classes). weak_flat: less influential flat prior conventional one cond_gsi Logical (default = TRUE). Option use conditional GSI model. See vignette details. TRUE: run MAGMA hybrid algorithm conditional GSI fully Bayesian. FALSE: run MAGMA fully Bayesian algorithm. file File path saving output. default NULL saving output. seed Option initialize pseudo-random number generator (set random seed) output can reproduced exactly. Just pick seed number make note future reference. default NULL. iden_output Option trace history individual group membership assignments included final output. Default FALSE.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_mdl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run MAGMA model — magmatize_mdl","text":"list object contains: raw output MAGMA list/multi-way array need summarized using summary functions, specifications model run (information needed summary), individual group membership assignment history (optional).","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_mdl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run MAGMA model — magmatize_mdl","text":"","code":"if (FALSE) { # \\dontrun{ # format data wd <- getwd() # path to data folder magma_data <- magmatize_data(wd = wd, save_data = FALSE)  # model run magma_out <- magmatize_mdl(magma_data, nreps = 50, nburn = 25, thin = 1, nchains = 2) } # }"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_summ.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize model output — magmatize_summ","title":"Summarize model output — magmatize_summ","text":"Summarize model output","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_summ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize model output — magmatize_summ","text":"","code":"magmatize_summ(   ma_out = NULL,   ma_dat,   summ_level,   which_dist = NULL,   fst_files = NULL,   save_trace = \"in_memory\" )"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_summ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize model output — magmatize_summ","text":"ma_out MAGMA output ma_dat MAGMA input data summ_level Summarize district subdistrict level which_dist Function format raw magma output one district time. Identify district 1, 2, ... Default = NULL summarize districts. fst_files Fst files location MAGMA model output saved. save_trace default = \"in_memory\" trace history part summary. specify path directory save trace history fst files.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_summ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize model output — magmatize_summ","text":"Summary tables reporting groups /age classes.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_summ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize model output — magmatize_summ","text":"","code":"if (FALSE) { # \\dontrun{ # format data wd <- getwd() # path to data folder magma_data <- magmatize_data(wd = wd, save_data = FALSE)  # model run magma_out <- magmatize_mdl(magma_data, nreps = 50, nburn = 25, thin = 1, nchains = 2)  # summary using output as an object magma_summ <- magmatize_summ(ma_out = magma_out, ma_dat = magma_data, summ_level = \"district\", which_dist = 1, save_trace = wd)  # summary using output saved as Fst files magma_summ <- magmatize_summ(ma_dat = magma_data, summ_level = \"district\", which_dist = 1, fst_files = wd) } # }"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_tr_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MCMC trace — magmatize_tr_plot","title":"Plot MCMC trace — magmatize_tr_plot","text":"Plot MCMC trace","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_tr_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MCMC trace — magmatize_tr_plot","text":"","code":"magmatize_tr_plot(obj, nburn = 0, thin = 1, name_order = NULL)"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_tr_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MCMC trace — magmatize_tr_plot","text":"obj Trace model output. nburn Number burn-set ran model. Default 0 save burn-ins (keep_burn = FALSE). thin Number thinning set ran model. Default 1 (thinning). name_order Arrange reporting groups wish. Leave empty want accept default.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_tr_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MCMC trace — magmatize_tr_plot","text":"Trace plot ggplot","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/magmatize_tr_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MCMC trace — magmatize_tr_plot","text":"","code":"if (FALSE) { # \\dontrun{ # format data wd <- getwd() # path to data folder magma_data <- magmatize_data(wd = wd, save_data = FALSE)  # model run magma_out <- magmatize_mdl(magma_data,   nreps = 50, nburn = 25, thin = 1, nchains = 2)  # summary magma_summ <- magmatize_summ(which_dist = 1,   ma_out = magma_out,   ma_dat = magma_data,   summ_level = \"district\",   type = \"pop\")  # trace plot magmatize_tr_plot(obj = magma_summ$pop_prop[[1]]) } # }"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/prep_malia_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare malia data — prep_malia_data","title":"Prepare malia data — prep_malia_data","text":"Take magma data object save items text files designated directory.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/prep_malia_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare malia data — prep_malia_data","text":"","code":"prep_malia_data(magma_data, path)"},{"path":"https://boppingshoe.github.io/magma.gsi/reference/prep_malia_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare malia data — prep_malia_data","text":"magma_data Magma data object made using magmatize_data() function. path designated directory set malia data set.","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/prep_malia_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare malia data — prep_malia_data","text":"Items magma data object saved text files","code":""},{"path":"https://boppingshoe.github.io/magma.gsi/reference/prep_malia_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare malia data — prep_malia_data","text":"","code":"if (FALSE) { # \\dontrun{ prep_malia_data(magma_data, \"D:/bobby_adfg/projects/magma/malia/data/bb2022\") } # }"},{"path":"https://boppingshoe.github.io/magma.gsi/news/index.html","id":"magmagsi-100","dir":"Changelog","previous_headings":"","what":"magma.gsi 1.0.0","title":"magma.gsi 1.0.0","text":"First working version R package. Functions run MAGMA model, summarize results (age-stock composition individual group membership assignments), provide convergence diagnostics trace plots. Additions non-R-package versions : hybrid conditional GSI, “zero ” “weak flat” configurations age priors, documents instructions model descriptions, saving posterior output Fst format.","code":""}]
